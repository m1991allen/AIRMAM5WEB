//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIRMAM5.DBEntity.DBEntity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AIRMAM5DBEntities : DbContext
    {
        public AIRMAM5DBEntities()
            : base("name=AIRMAM5DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbzCODE> tbzCODE { get; set; }
        public virtual DbSet<tbzCODE_SET> tbzCODE_SET { get; set; }
        public virtual DbSet<tbmUSER_GROUP> tbmUSER_GROUP { get; set; }
        public virtual DbSet<tbmUSERS> tbmUSERS { get; set; }
        public virtual DbSet<tbmNOTIFY> tbmNOTIFY { get; set; }
        public virtual DbSet<tbmUSER_NOTIFY> tbmUSER_NOTIFY { get; set; }
        public virtual DbSet<tbmFUNC_GROUP> tbmFUNC_GROUP { get; set; }
        public virtual DbSet<tbmDIR_GROUP> tbmDIR_GROUP { get; set; }
        public virtual DbSet<tbmANNOUNCE> tbmANNOUNCE { get; set; }
        public virtual DbSet<tbmDIR_USER> tbmDIR_USER { get; set; }
        public virtual DbSet<tbmTEMPLATE> tbmTEMPLATE { get; set; }
        public virtual DbSet<tbmTEMPLATE_FIELDS> tbmTEMPLATE_FIELDS { get; set; }
        public virtual DbSet<tbmGROUPS> tbmGROUPS { get; set; }
        public virtual DbSet<tbmSUBJECT> tbmSUBJECT { get; set; }
        public virtual DbSet<tbmSYNONYMS> tbmSYNONYMS { get; set; }
        public virtual DbSet<tbmARC_AUDIO> tbmARC_AUDIO { get; set; }
        public virtual DbSet<tbmARC_DOC> tbmARC_DOC { get; set; }
        public virtual DbSet<tbmARC_PHOTO> tbmARC_PHOTO { get; set; }
        public virtual DbSet<tblNO> tblNO { get; set; }
        public virtual DbSet<tbzCONFIG> tbzCONFIG { get; set; }
        public virtual DbSet<tblWORK> tblWORK { get; set; }
        public virtual DbSet<tbmARC_AUDIO_D> tbmARC_AUDIO_D { get; set; }
        public virtual DbSet<tbmARC_VIDEO_D> tbmARC_VIDEO_D { get; set; }
        public virtual DbSet<tbmARC_VIDEO_K> tbmARC_VIDEO_K { get; set; }
        public virtual DbSet<tbmUSER_DIR> tbmUSER_DIR { get; set; }
        public virtual DbSet<tblSRH> tblSRH { get; set; }
        public virtual DbSet<tblSRH_KW> tblSRH_KW { get; set; }
        public virtual DbSet<tbmMATERIAL> tbmMATERIAL { get; set; }
        public virtual DbSet<t_tbmARC_INDEX> t_tbmARC_INDEX { get; set; }
        public virtual DbSet<tbmUSER_FAVORITE> tbmUSER_FAVORITE { get; set; }
        public virtual DbSet<tbmFUNCTIONS> tbmFUNCTIONS { get; set; }
        public virtual DbSet<tbmDIRECTORIES> tbmDIRECTORIES { get; set; }
        public virtual DbSet<tblLOGIN> tblLOGIN { get; set; }
        public virtual DbSet<tbmBOOKING> tbmBOOKING { get; set; }
        public virtual DbSet<tbmBOOKING_T> tbmBOOKING_T { get; set; }
        public virtual DbSet<t_tbmARC_DOC> t_tbmARC_DOC { get; set; }
        public virtual DbSet<tbmRULE> tbmRULE { get; set; }
        public virtual DbSet<tbmRULE_TABLE> tbmRULE_TABLE { get; set; }
        public virtual DbSet<tbmRULE_FILTER> tbmRULE_FILTER { get; set; }
        public virtual DbSet<tblHUBCONNECTION> tblHUBCONNECTION { get; set; }
        public virtual DbSet<tbmCOLUMN_MAPPING> tbmCOLUMN_MAPPING { get; set; }
        public virtual DbSet<tbmLICENSE> tbmLICENSE { get; set; }
        public virtual DbSet<tbmARC_PRE> tbmARC_PRE { get; set; }
        public virtual DbSet<tbmARC_VIDEO> tbmARC_VIDEO { get; set; }
        public virtual DbSet<tbmUSER_EXTEND> tbmUSER_EXTEND { get; set; }
    
        public virtual ObjectResult<spGET_FUNCTIONS_BY_TYPE_Result> spGET_FUNCTIONS_BY_TYPE(string fsLOGIN_ID)
        {
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_FUNCTIONS_BY_TYPE_Result>("spGET_FUNCTIONS_BY_TYPE", fsLOGIN_IDParameter);
        }
    
        public virtual ObjectResult<spGET_FUNC_GROUP_BY_PARENT_ID_Result> spGET_FUNC_GROUP_BY_PARENT_ID(string fsGROUP_ID, string fsPARENT_ID)
        {
            var fsGROUP_IDParameter = fsGROUP_ID != null ?
                new ObjectParameter("fsGROUP_ID", fsGROUP_ID) :
                new ObjectParameter("fsGROUP_ID", typeof(string));
    
            var fsPARENT_IDParameter = fsPARENT_ID != null ?
                new ObjectParameter("fsPARENT_ID", fsPARENT_ID) :
                new ObjectParameter("fsPARENT_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_FUNC_GROUP_BY_PARENT_ID_Result>("spGET_FUNC_GROUP_BY_PARENT_ID", fsGROUP_IDParameter, fsPARENT_IDParameter);
        }
    
        public virtual ObjectResult<spGET_FUNC_GROUP_Result> spGET_FUNC_GROUP(string fsGROUP_ID, string fsFUNC_ID)
        {
            var fsGROUP_IDParameter = fsGROUP_ID != null ?
                new ObjectParameter("fsGROUP_ID", fsGROUP_ID) :
                new ObjectParameter("fsGROUP_ID", typeof(string));
    
            var fsFUNC_IDParameter = fsFUNC_ID != null ?
                new ObjectParameter("fsFUNC_ID", fsFUNC_ID) :
                new ObjectParameter("fsFUNC_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_FUNC_GROUP_Result>("spGET_FUNC_GROUP", fsGROUP_IDParameter, fsFUNC_IDParameter);
        }
    
        public virtual ObjectResult<spGET_FUNCTIONS_ALL_Result> spGET_FUNCTIONS_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_FUNCTIONS_ALL_Result>("spGET_FUNCTIONS_ALL");
        }
    
        public virtual ObjectResult<spGET_FUNCTIONS_BY_PARENT_ID_Result> spGET_FUNCTIONS_BY_PARENT_ID(string fsPARENT_ID)
        {
            var fsPARENT_IDParameter = fsPARENT_ID != null ?
                new ObjectParameter("fsPARENT_ID", fsPARENT_ID) :
                new ObjectParameter("fsPARENT_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_FUNCTIONS_BY_PARENT_ID_Result>("spGET_FUNCTIONS_BY_PARENT_ID", fsPARENT_IDParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_GROUPS(string fsGROUP_ID, string fsDELETED_BY)
        {
            var fsGROUP_IDParameter = fsGROUP_ID != null ?
                new ObjectParameter("fsGROUP_ID", fsGROUP_ID) :
                new ObjectParameter("fsGROUP_ID", typeof(string));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_GROUPS", fsGROUP_IDParameter, fsDELETED_BYParameter);
        }
    
        public virtual int spINSERT_L_LOG_BY_PARAMETERS(string fsCODE_ID, string fsCODE, string fsPARAMETERS, string fsNOTE, string fsDATA_KEY, string fsCREATED_BY)
        {
            var fsCODE_IDParameter = fsCODE_ID != null ?
                new ObjectParameter("fsCODE_ID", fsCODE_ID) :
                new ObjectParameter("fsCODE_ID", typeof(string));
    
            var fsCODEParameter = fsCODE != null ?
                new ObjectParameter("fsCODE", fsCODE) :
                new ObjectParameter("fsCODE", typeof(string));
    
            var fsPARAMETERSParameter = fsPARAMETERS != null ?
                new ObjectParameter("fsPARAMETERS", fsPARAMETERS) :
                new ObjectParameter("fsPARAMETERS", typeof(string));
    
            var fsNOTEParameter = fsNOTE != null ?
                new ObjectParameter("fsNOTE", fsNOTE) :
                new ObjectParameter("fsNOTE", typeof(string));
    
            var fsDATA_KEYParameter = fsDATA_KEY != null ?
                new ObjectParameter("fsDATA_KEY", fsDATA_KEY) :
                new ObjectParameter("fsDATA_KEY", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spINSERT_L_LOG_BY_PARAMETERS", fsCODE_IDParameter, fsCODEParameter, fsPARAMETERSParameter, fsNOTEParameter, fsDATA_KEYParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_ANNOUNCE_PUBLIC_Result> spGET_ANNOUNCE_PUBLIC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ANNOUNCE_PUBLIC_Result>("spGET_ANNOUNCE_PUBLIC");
        }
    
        public virtual ObjectResult<spGET_ANNOUNCE_BY_ANNID_DATES_TYPE_Result> spGET_ANNOUNCE_BY_ANNID_DATES_TYPE(Nullable<long> fnANN_ID, string fdSDATE, string fdEDATE, string fsTYPE)
        {
            var fnANN_IDParameter = fnANN_ID.HasValue ?
                new ObjectParameter("fnANN_ID", fnANN_ID) :
                new ObjectParameter("fnANN_ID", typeof(long));
    
            var fdSDATEParameter = fdSDATE != null ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(string));
    
            var fdEDATEParameter = fdEDATE != null ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ANNOUNCE_BY_ANNID_DATES_TYPE_Result>("spGET_ANNOUNCE_BY_ANNID_DATES_TYPE", fnANN_IDParameter, fdSDATEParameter, fdEDATEParameter, fsTYPEParameter);
        }
    
        public virtual ObjectResult<spGET_GROUPS_Result> spGET_GROUPS(string fsGROUP_ID)
        {
            var fsGROUP_IDParameter = fsGROUP_ID != null ?
                new ObjectParameter("fsGROUP_ID", fsGROUP_ID) :
                new ObjectParameter("fsGROUP_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_GROUPS_Result>("spGET_GROUPS", fsGROUP_IDParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_ANNOUNCE(Nullable<long> fnANN_ID, string fsDELETED_BY)
        {
            var fnANN_IDParameter = fnANN_ID.HasValue ?
                new ObjectParameter("fnANN_ID", fnANN_ID) :
                new ObjectParameter("fnANN_ID", typeof(long));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_ANNOUNCE", fnANN_IDParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_GROUPS(string fsGROUP_ID, string fsNAME, string fsDESCRIPTION, string fsTYPE, string fsCREATED_BY)
        {
            var fsGROUP_IDParameter = fsGROUP_ID != null ?
                new ObjectParameter("fsGROUP_ID", fsGROUP_ID) :
                new ObjectParameter("fsGROUP_ID", typeof(string));
    
            var fsNAMEParameter = fsNAME != null ?
                new ObjectParameter("fsNAME", fsNAME) :
                new ObjectParameter("fsNAME", typeof(string));
    
            var fsDESCRIPTIONParameter = fsDESCRIPTION != null ?
                new ObjectParameter("fsDESCRIPTION", fsDESCRIPTION) :
                new ObjectParameter("fsDESCRIPTION", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_GROUPS", fsGROUP_IDParameter, fsNAMEParameter, fsDESCRIPTIONParameter, fsTYPEParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_GROUPS(string fsGROUP_ID, string fsNAME, string fsDESCRIPTION, string fsTYPE, string fsUPDATED_BY)
        {
            var fsGROUP_IDParameter = fsGROUP_ID != null ?
                new ObjectParameter("fsGROUP_ID", fsGROUP_ID) :
                new ObjectParameter("fsGROUP_ID", typeof(string));
    
            var fsNAMEParameter = fsNAME != null ?
                new ObjectParameter("fsNAME", fsNAME) :
                new ObjectParameter("fsNAME", typeof(string));
    
            var fsDESCRIPTIONParameter = fsDESCRIPTION != null ?
                new ObjectParameter("fsDESCRIPTION", fsDESCRIPTION) :
                new ObjectParameter("fsDESCRIPTION", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_GROUPS", fsGROUP_IDParameter, fsNAMEParameter, fsDESCRIPTIONParameter, fsTYPEParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_ANNOUNCE(string fsTITLE, string fsCONTENT, Nullable<System.DateTime> fdSDATE, Nullable<System.DateTime> fdEDATE, string fsTYPE, Nullable<int> fnORDER, string fsGROUP_LIST, string fsIS_HIDDEN, string fsDEPT, string fsNOTE, string fsCREATED_BY)
        {
            var fsTITLEParameter = fsTITLE != null ?
                new ObjectParameter("fsTITLE", fsTITLE) :
                new ObjectParameter("fsTITLE", typeof(string));
    
            var fsCONTENTParameter = fsCONTENT != null ?
                new ObjectParameter("fsCONTENT", fsCONTENT) :
                new ObjectParameter("fsCONTENT", typeof(string));
    
            var fdSDATEParameter = fdSDATE.HasValue ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(System.DateTime));
    
            var fdEDATEParameter = fdEDATE.HasValue ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(System.DateTime));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fnORDERParameter = fnORDER.HasValue ?
                new ObjectParameter("fnORDER", fnORDER) :
                new ObjectParameter("fnORDER", typeof(int));
    
            var fsGROUP_LISTParameter = fsGROUP_LIST != null ?
                new ObjectParameter("fsGROUP_LIST", fsGROUP_LIST) :
                new ObjectParameter("fsGROUP_LIST", typeof(string));
    
            var fsIS_HIDDENParameter = fsIS_HIDDEN != null ?
                new ObjectParameter("fsIS_HIDDEN", fsIS_HIDDEN) :
                new ObjectParameter("fsIS_HIDDEN", typeof(string));
    
            var fsDEPTParameter = fsDEPT != null ?
                new ObjectParameter("fsDEPT", fsDEPT) :
                new ObjectParameter("fsDEPT", typeof(string));
    
            var fsNOTEParameter = fsNOTE != null ?
                new ObjectParameter("fsNOTE", fsNOTE) :
                new ObjectParameter("fsNOTE", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_ANNOUNCE", fsTITLEParameter, fsCONTENTParameter, fdSDATEParameter, fdEDATEParameter, fsTYPEParameter, fnORDERParameter, fsGROUP_LISTParameter, fsIS_HIDDENParameter, fsDEPTParameter, fsNOTEParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_ANNOUNCE(Nullable<long> fnANN_ID, string fsTITLE, string fsCONTENT, Nullable<System.DateTime> fdSDATE, Nullable<System.DateTime> fdEDATE, string fsTYPE, Nullable<int> fnORDER, string fsGROUP_LIST, string fsIS_HIDDEN, string fsDEPT, string fsNOTE, string fsUPDATED_BY)
        {
            var fnANN_IDParameter = fnANN_ID.HasValue ?
                new ObjectParameter("fnANN_ID", fnANN_ID) :
                new ObjectParameter("fnANN_ID", typeof(long));
    
            var fsTITLEParameter = fsTITLE != null ?
                new ObjectParameter("fsTITLE", fsTITLE) :
                new ObjectParameter("fsTITLE", typeof(string));
    
            var fsCONTENTParameter = fsCONTENT != null ?
                new ObjectParameter("fsCONTENT", fsCONTENT) :
                new ObjectParameter("fsCONTENT", typeof(string));
    
            var fdSDATEParameter = fdSDATE.HasValue ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(System.DateTime));
    
            var fdEDATEParameter = fdEDATE.HasValue ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(System.DateTime));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fnORDERParameter = fnORDER.HasValue ?
                new ObjectParameter("fnORDER", fnORDER) :
                new ObjectParameter("fnORDER", typeof(int));
    
            var fsGROUP_LISTParameter = fsGROUP_LIST != null ?
                new ObjectParameter("fsGROUP_LIST", fsGROUP_LIST) :
                new ObjectParameter("fsGROUP_LIST", typeof(string));
    
            var fsIS_HIDDENParameter = fsIS_HIDDEN != null ?
                new ObjectParameter("fsIS_HIDDEN", fsIS_HIDDEN) :
                new ObjectParameter("fsIS_HIDDEN", typeof(string));
    
            var fsDEPTParameter = fsDEPT != null ?
                new ObjectParameter("fsDEPT", fsDEPT) :
                new ObjectParameter("fsDEPT", typeof(string));
    
            var fsNOTEParameter = fsNOTE != null ?
                new ObjectParameter("fsNOTE", fsNOTE) :
                new ObjectParameter("fsNOTE", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_ANNOUNCE", fnANN_IDParameter, fsTITLEParameter, fsCONTENTParameter, fdSDATEParameter, fdEDATEParameter, fsTYPEParameter, fnORDERParameter, fsGROUP_LISTParameter, fsIS_HIDDENParameter, fsDEPTParameter, fsNOTEParameter, fsUPDATED_BYParameter);
        }
    
        public virtual int spINSERT_USERS(string fsUSER_ID, string fsLOGIN_ID, string fsPASSWORD, string fsNAME, string fsENAME, string fsTITLE, string fsDEPT_ID, string fsEMAIL, string fsPHONE, string fsDESCRIPTION, string fsFILE_SECRET, string fsBOOKING_TARGET_PATH, Nullable<bool> fsIS_ACTIVE, string fsCREATED_BY, string fsGROUP_IDs)
        {
            var fsUSER_IDParameter = fsUSER_ID != null ?
                new ObjectParameter("fsUSER_ID", fsUSER_ID) :
                new ObjectParameter("fsUSER_ID", typeof(string));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fsPASSWORDParameter = fsPASSWORD != null ?
                new ObjectParameter("fsPASSWORD", fsPASSWORD) :
                new ObjectParameter("fsPASSWORD", typeof(string));
    
            var fsNAMEParameter = fsNAME != null ?
                new ObjectParameter("fsNAME", fsNAME) :
                new ObjectParameter("fsNAME", typeof(string));
    
            var fsENAMEParameter = fsENAME != null ?
                new ObjectParameter("fsENAME", fsENAME) :
                new ObjectParameter("fsENAME", typeof(string));
    
            var fsTITLEParameter = fsTITLE != null ?
                new ObjectParameter("fsTITLE", fsTITLE) :
                new ObjectParameter("fsTITLE", typeof(string));
    
            var fsDEPT_IDParameter = fsDEPT_ID != null ?
                new ObjectParameter("fsDEPT_ID", fsDEPT_ID) :
                new ObjectParameter("fsDEPT_ID", typeof(string));
    
            var fsEMAILParameter = fsEMAIL != null ?
                new ObjectParameter("fsEMAIL", fsEMAIL) :
                new ObjectParameter("fsEMAIL", typeof(string));
    
            var fsPHONEParameter = fsPHONE != null ?
                new ObjectParameter("fsPHONE", fsPHONE) :
                new ObjectParameter("fsPHONE", typeof(string));
    
            var fsDESCRIPTIONParameter = fsDESCRIPTION != null ?
                new ObjectParameter("fsDESCRIPTION", fsDESCRIPTION) :
                new ObjectParameter("fsDESCRIPTION", typeof(string));
    
            var fsFILE_SECRETParameter = fsFILE_SECRET != null ?
                new ObjectParameter("fsFILE_SECRET", fsFILE_SECRET) :
                new ObjectParameter("fsFILE_SECRET", typeof(string));
    
            var fsBOOKING_TARGET_PATHParameter = fsBOOKING_TARGET_PATH != null ?
                new ObjectParameter("fsBOOKING_TARGET_PATH", fsBOOKING_TARGET_PATH) :
                new ObjectParameter("fsBOOKING_TARGET_PATH", typeof(string));
    
            var fsIS_ACTIVEParameter = fsIS_ACTIVE.HasValue ?
                new ObjectParameter("fsIS_ACTIVE", fsIS_ACTIVE) :
                new ObjectParameter("fsIS_ACTIVE", typeof(bool));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            var fsGROUP_IDsParameter = fsGROUP_IDs != null ?
                new ObjectParameter("fsGROUP_IDs", fsGROUP_IDs) :
                new ObjectParameter("fsGROUP_IDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spINSERT_USERS", fsUSER_IDParameter, fsLOGIN_IDParameter, fsPASSWORDParameter, fsNAMEParameter, fsENAMEParameter, fsTITLEParameter, fsDEPT_IDParameter, fsEMAILParameter, fsPHONEParameter, fsDESCRIPTIONParameter, fsFILE_SECRETParameter, fsBOOKING_TARGET_PATHParameter, fsIS_ACTIVEParameter, fsCREATED_BYParameter, fsGROUP_IDsParameter);
        }
    
        public virtual ObjectResult<spGET_CODE_Result> spGET_CODE(string fsCODE_ID, string fsCODE, string fsNAME)
        {
            var fsCODE_IDParameter = fsCODE_ID != null ?
                new ObjectParameter("fsCODE_ID", fsCODE_ID) :
                new ObjectParameter("fsCODE_ID", typeof(string));
    
            var fsCODEParameter = fsCODE != null ?
                new ObjectParameter("fsCODE", fsCODE) :
                new ObjectParameter("fsCODE", typeof(string));
    
            var fsNAMEParameter = fsNAME != null ?
                new ObjectParameter("fsNAME", fsNAME) :
                new ObjectParameter("fsNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_CODE_Result>("spGET_CODE", fsCODE_IDParameter, fsCODEParameter, fsNAMEParameter);
        }
    
        public virtual ObjectResult<spGET_CODE_SET_Result> spGET_CODE_SET(string fsCODE_ID, string fsTITLE, string fsTYPE)
        {
            var fsCODE_IDParameter = fsCODE_ID != null ?
                new ObjectParameter("fsCODE_ID", fsCODE_ID) :
                new ObjectParameter("fsCODE_ID", typeof(string));
    
            var fsTITLEParameter = fsTITLE != null ?
                new ObjectParameter("fsTITLE", fsTITLE) :
                new ObjectParameter("fsTITLE", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_CODE_SET_Result>("spGET_CODE_SET", fsCODE_IDParameter, fsTITLEParameter, fsTYPEParameter);
        }
    
        public virtual ObjectResult<spGET_USERS_GROUP_BY_USER_ID_Result> spGET_USERS_GROUP_BY_USER_ID(string fsUSER_ID)
        {
            var fsUSER_IDParameter = fsUSER_ID != null ?
                new ObjectParameter("fsUSER_ID", fsUSER_ID) :
                new ObjectParameter("fsUSER_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_USERS_GROUP_BY_USER_ID_Result>("spGET_USERS_GROUP_BY_USER_ID", fsUSER_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ANNOUNCE_BY_EFFECTIVE_DATE_AND_USERGROUP_AND_NOT_HIDDEN_Result> spGET_ANNOUNCE_BY_EFFECTIVE_DATE_AND_USERGROUP_AND_NOT_HIDDEN(string fsLOGIN_ID)
        {
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ANNOUNCE_BY_EFFECTIVE_DATE_AND_USERGROUP_AND_NOT_HIDDEN_Result>("spGET_ANNOUNCE_BY_EFFECTIVE_DATE_AND_USERGROUP_AND_NOT_HIDDEN", fsLOGIN_IDParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_USERS(string fsUSER_ID, string fsPASSWORD, string fsNAME, string fsENAME, string fsTITLE, string fsDEPT_ID, string fsEMAIL, string fsPHONE, string fsDESCRIPTION, string fsFILE_SECRET, string fsBOOKING_TARGET_PATH, Nullable<bool> fsIS_ACTIVE, string fsUPDATED_BY, string fsGROUP_IDs)
        {
            var fsUSER_IDParameter = fsUSER_ID != null ?
                new ObjectParameter("fsUSER_ID", fsUSER_ID) :
                new ObjectParameter("fsUSER_ID", typeof(string));
    
            var fsPASSWORDParameter = fsPASSWORD != null ?
                new ObjectParameter("fsPASSWORD", fsPASSWORD) :
                new ObjectParameter("fsPASSWORD", typeof(string));
    
            var fsNAMEParameter = fsNAME != null ?
                new ObjectParameter("fsNAME", fsNAME) :
                new ObjectParameter("fsNAME", typeof(string));
    
            var fsENAMEParameter = fsENAME != null ?
                new ObjectParameter("fsENAME", fsENAME) :
                new ObjectParameter("fsENAME", typeof(string));
    
            var fsTITLEParameter = fsTITLE != null ?
                new ObjectParameter("fsTITLE", fsTITLE) :
                new ObjectParameter("fsTITLE", typeof(string));
    
            var fsDEPT_IDParameter = fsDEPT_ID != null ?
                new ObjectParameter("fsDEPT_ID", fsDEPT_ID) :
                new ObjectParameter("fsDEPT_ID", typeof(string));
    
            var fsEMAILParameter = fsEMAIL != null ?
                new ObjectParameter("fsEMAIL", fsEMAIL) :
                new ObjectParameter("fsEMAIL", typeof(string));
    
            var fsPHONEParameter = fsPHONE != null ?
                new ObjectParameter("fsPHONE", fsPHONE) :
                new ObjectParameter("fsPHONE", typeof(string));
    
            var fsDESCRIPTIONParameter = fsDESCRIPTION != null ?
                new ObjectParameter("fsDESCRIPTION", fsDESCRIPTION) :
                new ObjectParameter("fsDESCRIPTION", typeof(string));
    
            var fsFILE_SECRETParameter = fsFILE_SECRET != null ?
                new ObjectParameter("fsFILE_SECRET", fsFILE_SECRET) :
                new ObjectParameter("fsFILE_SECRET", typeof(string));
    
            var fsBOOKING_TARGET_PATHParameter = fsBOOKING_TARGET_PATH != null ?
                new ObjectParameter("fsBOOKING_TARGET_PATH", fsBOOKING_TARGET_PATH) :
                new ObjectParameter("fsBOOKING_TARGET_PATH", typeof(string));
    
            var fsIS_ACTIVEParameter = fsIS_ACTIVE.HasValue ?
                new ObjectParameter("fsIS_ACTIVE", fsIS_ACTIVE) :
                new ObjectParameter("fsIS_ACTIVE", typeof(bool));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            var fsGROUP_IDsParameter = fsGROUP_IDs != null ?
                new ObjectParameter("fsGROUP_IDs", fsGROUP_IDs) :
                new ObjectParameter("fsGROUP_IDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_USERS", fsUSER_IDParameter, fsPASSWORDParameter, fsNAMEParameter, fsENAMEParameter, fsTITLEParameter, fsDEPT_IDParameter, fsEMAILParameter, fsPHONEParameter, fsDESCRIPTIONParameter, fsFILE_SECRETParameter, fsBOOKING_TARGET_PATHParameter, fsIS_ACTIVEParameter, fsUPDATED_BYParameter, fsGROUP_IDsParameter);
        }
    
        public virtual ObjectResult<spGET_USERS_Result> spGET_USERS(string fsUSER_ID, string fsLOGIN_ID, string fsNAME)
        {
            var fsUSER_IDParameter = fsUSER_ID != null ?
                new ObjectParameter("fsUSER_ID", fsUSER_ID) :
                new ObjectParameter("fsUSER_ID", typeof(string));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fsNAMEParameter = fsNAME != null ?
                new ObjectParameter("fsNAME", fsNAME) :
                new ObjectParameter("fsNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_USERS_Result>("spGET_USERS", fsUSER_IDParameter, fsLOGIN_IDParameter, fsNAMEParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_FUNC_GROUP(string fsFUNC_IDs, string fsGROUP_ID, string fsUPDATED_BY)
        {
            var fsFUNC_IDsParameter = fsFUNC_IDs != null ?
                new ObjectParameter("fsFUNC_IDs", fsFUNC_IDs) :
                new ObjectParameter("fsFUNC_IDs", typeof(string));
    
            var fsGROUP_IDParameter = fsGROUP_ID != null ?
                new ObjectParameter("fsGROUP_ID", fsGROUP_ID) :
                new ObjectParameter("fsGROUP_ID", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_FUNC_GROUP", fsFUNC_IDsParameter, fsGROUP_IDParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_L_LOGIN_Result> spGET_L_LOGIN(Nullable<long> fnLOGIN_ID, string fdSDATE, string fdEDATE, string fsLOGIN_ID)
        {
            var fnLOGIN_IDParameter = fnLOGIN_ID.HasValue ?
                new ObjectParameter("fnLOGIN_ID", fnLOGIN_ID) :
                new ObjectParameter("fnLOGIN_ID", typeof(long));
    
            var fdSDATEParameter = fdSDATE != null ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(string));
    
            var fdEDATEParameter = fdEDATE != null ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(string));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_L_LOGIN_Result>("spGET_L_LOGIN", fnLOGIN_IDParameter, fdSDATEParameter, fdEDATEParameter, fsLOGIN_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> spINSERT_L_LOGIN(string fsLOGIN_ID, Nullable<System.DateTime> fdSTIME, Nullable<System.DateTime> fdETIME, string fsNOTE, string fsCREATED_BY)
        {
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fdSTIMEParameter = fdSTIME.HasValue ?
                new ObjectParameter("fdSTIME", fdSTIME) :
                new ObjectParameter("fdSTIME", typeof(System.DateTime));
    
            var fdETIMEParameter = fdETIME.HasValue ?
                new ObjectParameter("fdETIME", fdETIME) :
                new ObjectParameter("fdETIME", typeof(System.DateTime));
    
            var fsNOTEParameter = fsNOTE != null ?
                new ObjectParameter("fsNOTE", fsNOTE) :
                new ObjectParameter("fsNOTE", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spINSERT_L_LOGIN", fsLOGIN_IDParameter, fdSTIMEParameter, fdETIMEParameter, fsNOTEParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_L_LOGIN_LAST100_Result> spGET_L_LOGIN_LAST100()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_L_LOGIN_LAST100_Result>("spGET_L_LOGIN_LAST100");
        }
    
        public virtual ObjectResult<Nullable<int>> spUPDATE_L_LOGIN_BY_ETIME(Nullable<long> fnLOGIN_ID, string fsLOGIN_ID)
        {
            var fnLOGIN_IDParameter = fnLOGIN_ID.HasValue ?
                new ObjectParameter("fnLOGIN_ID", fnLOGIN_ID) :
                new ObjectParameter("fnLOGIN_ID", typeof(long));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spUPDATE_L_LOGIN_BY_ETIME", fnLOGIN_IDParameter, fsLOGIN_IDParameter);
        }
    
        public virtual ObjectResult<spGET_L_LOGIN_ALIVE_Result> spGET_L_LOGIN_ALIVE(Nullable<long> fnLOGIN_ID)
        {
            var fnLOGIN_IDParameter = fnLOGIN_ID.HasValue ?
                new ObjectParameter("fnLOGIN_ID", fnLOGIN_ID) :
                new ObjectParameter("fnLOGIN_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_L_LOGIN_ALIVE_Result>("spGET_L_LOGIN_ALIVE", fnLOGIN_IDParameter);
        }
    
        public virtual ObjectResult<spGET_L_LOG_BY_LOGID_DATES_LOGINID_Result> spGET_L_LOG_BY_LOGID_DATES_LOGINID(Nullable<long> fnlLOG_ID, string fdSDATE, string fdEDATE, string fsLOGIN_ID)
        {
            var fnlLOG_IDParameter = fnlLOG_ID.HasValue ?
                new ObjectParameter("fnlLOG_ID", fnlLOG_ID) :
                new ObjectParameter("fnlLOG_ID", typeof(long));
    
            var fdSDATEParameter = fdSDATE != null ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(string));
    
            var fdEDATEParameter = fdEDATE != null ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(string));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_L_LOG_BY_LOGID_DATES_LOGINID_Result>("spGET_L_LOG_BY_LOGID_DATES_LOGINID", fnlLOG_IDParameter, fdSDATEParameter, fdEDATEParameter, fsLOGIN_IDParameter);
        }
    
        public virtual ObjectResult<spGET_L_TRAN_BY_DATES_Result> spGET_L_TRAN_BY_DATES(string fdDATE1, string fdDATE2)
        {
            var fdDATE1Parameter = fdDATE1 != null ?
                new ObjectParameter("fdDATE1", fdDATE1) :
                new ObjectParameter("fdDATE1", typeof(string));
    
            var fdDATE2Parameter = fdDATE2 != null ?
                new ObjectParameter("fdDATE2", fdDATE2) :
                new ObjectParameter("fdDATE2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_L_TRAN_BY_DATES_Result>("spGET_L_TRAN_BY_DATES", fdDATE1Parameter, fdDATE2Parameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_L_WORK_RETRAN(Nullable<long> fnWORK_ID, string fsCREATED_BY)
        {
            var fnWORK_IDParameter = fnWORK_ID.HasValue ?
                new ObjectParameter("fnWORK_ID", fnWORK_ID) :
                new ObjectParameter("fnWORK_ID", typeof(long));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_L_WORK_RETRAN", fnWORK_IDParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_L_WORK_PRIORITY(Nullable<long> fnWORK_ID, string fsPRIORITY, string fsUPDATED_BY)
        {
            var fnWORK_IDParameter = fnWORK_ID.HasValue ?
                new ObjectParameter("fnWORK_ID", fnWORK_ID) :
                new ObjectParameter("fnWORK_ID", typeof(long));
    
            var fsPRIORITYParameter = fsPRIORITY != null ?
                new ObjectParameter("fsPRIORITY", fsPRIORITY) :
                new ObjectParameter("fsPRIORITY", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_L_WORK_PRIORITY", fnWORK_IDParameter, fsPRIORITYParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_L_WORK_BY_TRANSCODE_Result> spGET_L_WORK_BY_TRANSCODE(Nullable<long> fnWORK_ID, string fdBEG_DATE, string fdEND_DATE, string fsSTATUS)
        {
            var fnWORK_IDParameter = fnWORK_ID.HasValue ?
                new ObjectParameter("fnWORK_ID", fnWORK_ID) :
                new ObjectParameter("fnWORK_ID", typeof(long));
    
            var fdBEG_DATEParameter = fdBEG_DATE != null ?
                new ObjectParameter("fdBEG_DATE", fdBEG_DATE) :
                new ObjectParameter("fdBEG_DATE", typeof(string));
    
            var fdEND_DATEParameter = fdEND_DATE != null ?
                new ObjectParameter("fdEND_DATE", fdEND_DATE) :
                new ObjectParameter("fdEND_DATE", typeof(string));
    
            var fsSTATUSParameter = fsSTATUS != null ?
                new ObjectParameter("fsSTATUS", fsSTATUS) :
                new ObjectParameter("fsSTATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_L_WORK_BY_TRANSCODE_Result>("spGET_L_WORK_BY_TRANSCODE", fnWORK_IDParameter, fdBEG_DATEParameter, fdEND_DATEParameter, fsSTATUSParameter);
        }
    
        public virtual ObjectResult<sp_t_GET_ARC_INDEX_BY_CONDITION_Result> sp_t_GET_ARC_INDEX_BY_CONDITION(string fdDATE1, string fdDATE2, string fsSTATUS, string fsTYPE, Nullable<long> fnINDEX_ID)
        {
            var fdDATE1Parameter = fdDATE1 != null ?
                new ObjectParameter("fdDATE1", fdDATE1) :
                new ObjectParameter("fdDATE1", typeof(string));
    
            var fdDATE2Parameter = fdDATE2 != null ?
                new ObjectParameter("fdDATE2", fdDATE2) :
                new ObjectParameter("fdDATE2", typeof(string));
    
            var fsSTATUSParameter = fsSTATUS != null ?
                new ObjectParameter("fsSTATUS", fsSTATUS) :
                new ObjectParameter("fsSTATUS", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_t_GET_ARC_INDEX_BY_CONDITION_Result>("sp_t_GET_ARC_INDEX_BY_CONDITION", fdDATE1Parameter, fdDATE2Parameter, fsSTATUSParameter, fsTYPEParameter, fnINDEX_IDParameter);
        }
    
        public virtual ObjectResult<string> sp_t_RESTORE_ARC(Nullable<long> fnINDEX_ID, string fsRESTORED_BY)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            var fsRESTORED_BYParameter = fsRESTORED_BY != null ?
                new ObjectParameter("fsRESTORED_BY", fsRESTORED_BY) :
                new ObjectParameter("fsRESTORED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_t_RESTORE_ARC", fnINDEX_IDParameter, fsRESTORED_BYParameter);
        }
    
        public virtual ObjectResult<string> sp_t_DELETE_ARC(Nullable<long> fnINDEX_ID, string fsDELETED_BY)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_t_DELETE_ARC", fnINDEX_IDParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<string> sp_t_GET_tbmARC_FILE_PATHS(Nullable<long> fnINDEX_ID, string fsTYPE, string fsFILE_NO)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_t_GET_tbmARC_FILE_PATHS", fnINDEX_IDParameter, fsTYPEParameter, fsFILE_NOParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_CODE(string fsCODE_ID, string fsCODE, string fsNAME, string fsENAME, Nullable<int> fnORDER, string fsSET, string fsNOTE, string fsIS_ENABLED, string fsTYPE, string fsCREATED_BY)
        {
            var fsCODE_IDParameter = fsCODE_ID != null ?
                new ObjectParameter("fsCODE_ID", fsCODE_ID) :
                new ObjectParameter("fsCODE_ID", typeof(string));
    
            var fsCODEParameter = fsCODE != null ?
                new ObjectParameter("fsCODE", fsCODE) :
                new ObjectParameter("fsCODE", typeof(string));
    
            var fsNAMEParameter = fsNAME != null ?
                new ObjectParameter("fsNAME", fsNAME) :
                new ObjectParameter("fsNAME", typeof(string));
    
            var fsENAMEParameter = fsENAME != null ?
                new ObjectParameter("fsENAME", fsENAME) :
                new ObjectParameter("fsENAME", typeof(string));
    
            var fnORDERParameter = fnORDER.HasValue ?
                new ObjectParameter("fnORDER", fnORDER) :
                new ObjectParameter("fnORDER", typeof(int));
    
            var fsSETParameter = fsSET != null ?
                new ObjectParameter("fsSET", fsSET) :
                new ObjectParameter("fsSET", typeof(string));
    
            var fsNOTEParameter = fsNOTE != null ?
                new ObjectParameter("fsNOTE", fsNOTE) :
                new ObjectParameter("fsNOTE", typeof(string));
    
            var fsIS_ENABLEDParameter = fsIS_ENABLED != null ?
                new ObjectParameter("fsIS_ENABLED", fsIS_ENABLED) :
                new ObjectParameter("fsIS_ENABLED", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_CODE", fsCODE_IDParameter, fsCODEParameter, fsNAMEParameter, fsENAMEParameter, fnORDERParameter, fsSETParameter, fsNOTEParameter, fsIS_ENABLEDParameter, fsTYPEParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_CODE_SET(string fsCODE_ID, string fsTITLE, string fsTBCOL, string fsNOTE, string fsIS_ENABLED, string fsTYPE, string fsCREATED_BY)
        {
            var fsCODE_IDParameter = fsCODE_ID != null ?
                new ObjectParameter("fsCODE_ID", fsCODE_ID) :
                new ObjectParameter("fsCODE_ID", typeof(string));
    
            var fsTITLEParameter = fsTITLE != null ?
                new ObjectParameter("fsTITLE", fsTITLE) :
                new ObjectParameter("fsTITLE", typeof(string));
    
            var fsTBCOLParameter = fsTBCOL != null ?
                new ObjectParameter("fsTBCOL", fsTBCOL) :
                new ObjectParameter("fsTBCOL", typeof(string));
    
            var fsNOTEParameter = fsNOTE != null ?
                new ObjectParameter("fsNOTE", fsNOTE) :
                new ObjectParameter("fsNOTE", typeof(string));
    
            var fsIS_ENABLEDParameter = fsIS_ENABLED != null ?
                new ObjectParameter("fsIS_ENABLED", fsIS_ENABLED) :
                new ObjectParameter("fsIS_ENABLED", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_CODE_SET", fsCODE_IDParameter, fsTITLEParameter, fsTBCOLParameter, fsNOTEParameter, fsIS_ENABLEDParameter, fsTYPEParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_CODE(string fsCODE_ID, string fsCODE, string fsNAME, string fsENAME, Nullable<int> fnORDER, string fsSET, string fsNOTE, string fsIS_ENABLED, string fsTYPE, string fsUPDATED_BY)
        {
            var fsCODE_IDParameter = fsCODE_ID != null ?
                new ObjectParameter("fsCODE_ID", fsCODE_ID) :
                new ObjectParameter("fsCODE_ID", typeof(string));
    
            var fsCODEParameter = fsCODE != null ?
                new ObjectParameter("fsCODE", fsCODE) :
                new ObjectParameter("fsCODE", typeof(string));
    
            var fsNAMEParameter = fsNAME != null ?
                new ObjectParameter("fsNAME", fsNAME) :
                new ObjectParameter("fsNAME", typeof(string));
    
            var fsENAMEParameter = fsENAME != null ?
                new ObjectParameter("fsENAME", fsENAME) :
                new ObjectParameter("fsENAME", typeof(string));
    
            var fnORDERParameter = fnORDER.HasValue ?
                new ObjectParameter("fnORDER", fnORDER) :
                new ObjectParameter("fnORDER", typeof(int));
    
            var fsSETParameter = fsSET != null ?
                new ObjectParameter("fsSET", fsSET) :
                new ObjectParameter("fsSET", typeof(string));
    
            var fsNOTEParameter = fsNOTE != null ?
                new ObjectParameter("fsNOTE", fsNOTE) :
                new ObjectParameter("fsNOTE", typeof(string));
    
            var fsIS_ENABLEDParameter = fsIS_ENABLED != null ?
                new ObjectParameter("fsIS_ENABLED", fsIS_ENABLED) :
                new ObjectParameter("fsIS_ENABLED", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_CODE", fsCODE_IDParameter, fsCODEParameter, fsNAMEParameter, fsENAMEParameter, fnORDERParameter, fsSETParameter, fsNOTEParameter, fsIS_ENABLEDParameter, fsTYPEParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_CODE_SET(string fsCODE_ID, string fsTITLE, string fsTBCOL, string fsNOTE, string fsIS_ENABLED, string fsTYPE, string fsUPDATED_BY)
        {
            var fsCODE_IDParameter = fsCODE_ID != null ?
                new ObjectParameter("fsCODE_ID", fsCODE_ID) :
                new ObjectParameter("fsCODE_ID", typeof(string));
    
            var fsTITLEParameter = fsTITLE != null ?
                new ObjectParameter("fsTITLE", fsTITLE) :
                new ObjectParameter("fsTITLE", typeof(string));
    
            var fsTBCOLParameter = fsTBCOL != null ?
                new ObjectParameter("fsTBCOL", fsTBCOL) :
                new ObjectParameter("fsTBCOL", typeof(string));
    
            var fsNOTEParameter = fsNOTE != null ?
                new ObjectParameter("fsNOTE", fsNOTE) :
                new ObjectParameter("fsNOTE", typeof(string));
    
            var fsIS_ENABLEDParameter = fsIS_ENABLED != null ?
                new ObjectParameter("fsIS_ENABLED", fsIS_ENABLED) :
                new ObjectParameter("fsIS_ENABLED", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_CODE_SET", fsCODE_IDParameter, fsTITLEParameter, fsTBCOLParameter, fsNOTEParameter, fsIS_ENABLEDParameter, fsTYPEParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_CODE(string fsCODE_ID, string fsCODE, string fsDELETED_BY)
        {
            var fsCODE_IDParameter = fsCODE_ID != null ?
                new ObjectParameter("fsCODE_ID", fsCODE_ID) :
                new ObjectParameter("fsCODE_ID", typeof(string));
    
            var fsCODEParameter = fsCODE != null ?
                new ObjectParameter("fsCODE", fsCODE) :
                new ObjectParameter("fsCODE", typeof(string));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_CODE", fsCODE_IDParameter, fsCODEParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_CODE_SET(string fsCODE_ID, string fsDELETED_BY)
        {
            var fsCODE_IDParameter = fsCODE_ID != null ?
                new ObjectParameter("fsCODE_ID", fsCODE_ID) :
                new ObjectParameter("fsCODE_ID", typeof(string));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_CODE_SET", fsCODE_IDParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_SYNONYMS(Nullable<long> fnINDEX_ID, string fsDELETED_BY)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_SYNONYMS", fnINDEX_IDParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_SYNONYMS(string fsTEXT_LIST, string fsTYPE, string fsNOTE, string fsCREATED_BY)
        {
            var fsTEXT_LISTParameter = fsTEXT_LIST != null ?
                new ObjectParameter("fsTEXT_LIST", fsTEXT_LIST) :
                new ObjectParameter("fsTEXT_LIST", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsNOTEParameter = fsNOTE != null ?
                new ObjectParameter("fsNOTE", fsNOTE) :
                new ObjectParameter("fsNOTE", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_SYNONYMS", fsTEXT_LISTParameter, fsTYPEParameter, fsNOTEParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_SYNONYMS(Nullable<long> fnINDEX_ID, string fsTEXT_LIST, string fsTYPE, string fsNOTE, string fsUPDATED_BY)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            var fsTEXT_LISTParameter = fsTEXT_LIST != null ?
                new ObjectParameter("fsTEXT_LIST", fsTEXT_LIST) :
                new ObjectParameter("fsTEXT_LIST", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsNOTEParameter = fsNOTE != null ?
                new ObjectParameter("fsNOTE", fsNOTE) :
                new ObjectParameter("fsNOTE", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_SYNONYMS", fnINDEX_IDParameter, fsTEXT_LISTParameter, fsTYPEParameter, fsNOTEParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_SYNONYMS_Result> spGET_SYNONYMS(Nullable<long> fnINDEX_ID, string fsTYPE, string fsTEXT)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsTEXTParameter = fsTEXT != null ?
                new ObjectParameter("fsTEXT", fsTEXT) :
                new ObjectParameter("fsTEXT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_SYNONYMS_Result>("spGET_SYNONYMS", fnINDEX_IDParameter, fsTYPEParameter, fsTEXTParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_TEMPLATE(Nullable<int> fnTEMP_ID, string fsDELETED_BY)
        {
            var fnTEMP_IDParameter = fnTEMP_ID.HasValue ?
                new ObjectParameter("fnTEMP_ID", fnTEMP_ID) :
                new ObjectParameter("fnTEMP_ID", typeof(int));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_TEMPLATE", fnTEMP_IDParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_TEMPLATE_Result> spGET_TEMPLATE(Nullable<int> fnTEMP_ID, string fsTABLE)
        {
            var fnTEMP_IDParameter = fnTEMP_ID.HasValue ?
                new ObjectParameter("fnTEMP_ID", fnTEMP_ID) :
                new ObjectParameter("fnTEMP_ID", typeof(int));
    
            var fsTABLEParameter = fsTABLE != null ?
                new ObjectParameter("fsTABLE", fsTABLE) :
                new ObjectParameter("fsTABLE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_TEMPLATE_Result>("spGET_TEMPLATE", fnTEMP_IDParameter, fsTABLEParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_TEMPLATE(string fsNAME, string fsTABLE, string fsDESCRIPTION, string fcIS_SEARCH, string fsCREATED_BY)
        {
            var fsNAMEParameter = fsNAME != null ?
                new ObjectParameter("fsNAME", fsNAME) :
                new ObjectParameter("fsNAME", typeof(string));
    
            var fsTABLEParameter = fsTABLE != null ?
                new ObjectParameter("fsTABLE", fsTABLE) :
                new ObjectParameter("fsTABLE", typeof(string));
    
            var fsDESCRIPTIONParameter = fsDESCRIPTION != null ?
                new ObjectParameter("fsDESCRIPTION", fsDESCRIPTION) :
                new ObjectParameter("fsDESCRIPTION", typeof(string));
    
            var fcIS_SEARCHParameter = fcIS_SEARCH != null ?
                new ObjectParameter("fcIS_SEARCH", fcIS_SEARCH) :
                new ObjectParameter("fcIS_SEARCH", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_TEMPLATE", fsNAMEParameter, fsTABLEParameter, fsDESCRIPTIONParameter, fcIS_SEARCHParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_TEMPLATE(Nullable<int> fnTEMP_ID, string fsNAME, string fsTABLE, string fsDESCRIPTION, string fcIS_SEARCH, string fsUPDATED_BY)
        {
            var fnTEMP_IDParameter = fnTEMP_ID.HasValue ?
                new ObjectParameter("fnTEMP_ID", fnTEMP_ID) :
                new ObjectParameter("fnTEMP_ID", typeof(int));
    
            var fsNAMEParameter = fsNAME != null ?
                new ObjectParameter("fsNAME", fsNAME) :
                new ObjectParameter("fsNAME", typeof(string));
    
            var fsTABLEParameter = fsTABLE != null ?
                new ObjectParameter("fsTABLE", fsTABLE) :
                new ObjectParameter("fsTABLE", typeof(string));
    
            var fsDESCRIPTIONParameter = fsDESCRIPTION != null ?
                new ObjectParameter("fsDESCRIPTION", fsDESCRIPTION) :
                new ObjectParameter("fsDESCRIPTION", typeof(string));
    
            var fcIS_SEARCHParameter = fcIS_SEARCH != null ?
                new ObjectParameter("fcIS_SEARCH", fcIS_SEARCH) :
                new ObjectParameter("fcIS_SEARCH", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_TEMPLATE", fnTEMP_IDParameter, fsNAMEParameter, fsTABLEParameter, fsDESCRIPTIONParameter, fcIS_SEARCHParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_TEMPLATE_FIELDS_BY_TEMP_ID_Result> spGET_TEMPLATE_FIELDS_BY_TEMP_ID(Nullable<int> fnTEMP_ID)
        {
            var fnTEMP_IDParameter = fnTEMP_ID.HasValue ?
                new ObjectParameter("fnTEMP_ID", fnTEMP_ID) :
                new ObjectParameter("fnTEMP_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_TEMPLATE_FIELDS_BY_TEMP_ID_Result>("spGET_TEMPLATE_FIELDS_BY_TEMP_ID", fnTEMP_IDParameter);
        }
    
        public virtual ObjectResult<spGET_L_SRH_Result> spGET_L_SRH(Nullable<long> fnSRH_ID, string fdBEG_DATE, string fdEND_DATE, string fsCREATED_BY)
        {
            var fnSRH_IDParameter = fnSRH_ID.HasValue ?
                new ObjectParameter("fnSRH_ID", fnSRH_ID) :
                new ObjectParameter("fnSRH_ID", typeof(long));
    
            var fdBEG_DATEParameter = fdBEG_DATE != null ?
                new ObjectParameter("fdBEG_DATE", fdBEG_DATE) :
                new ObjectParameter("fdBEG_DATE", typeof(string));
    
            var fdEND_DATEParameter = fdEND_DATE != null ?
                new ObjectParameter("fdEND_DATE", fdEND_DATE) :
                new ObjectParameter("fdEND_DATE", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_L_SRH_Result>("spGET_L_SRH", fnSRH_IDParameter, fdBEG_DATEParameter, fdEND_DATEParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_DIRECTORIES_Result> spGET_DIRECTORIES(Nullable<long> fnDIR_ID)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_DIRECTORIES_Result>("spGET_DIRECTORIES", fnDIR_IDParameter);
        }
    
        public virtual ObjectResult<spGET_DIRECTORIES_LOAD_ON_DEMAND_Result> spGET_DIRECTORIES_LOAD_ON_DEMAND(Nullable<long> fnDIR_ID, string fsLOGIN_ID, string fsKEYWORD, string fcSHOW_SUBJ, Nullable<bool> fbSHOWALL)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fsKEYWORDParameter = fsKEYWORD != null ?
                new ObjectParameter("fsKEYWORD", fsKEYWORD) :
                new ObjectParameter("fsKEYWORD", typeof(string));
    
            var fcSHOW_SUBJParameter = fcSHOW_SUBJ != null ?
                new ObjectParameter("fcSHOW_SUBJ", fcSHOW_SUBJ) :
                new ObjectParameter("fcSHOW_SUBJ", typeof(string));
    
            var fbSHOWALLParameter = fbSHOWALL.HasValue ?
                new ObjectParameter("fbSHOWALL", fbSHOWALL) :
                new ObjectParameter("fbSHOWALL", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_DIRECTORIES_LOAD_ON_DEMAND_Result>("spGET_DIRECTORIES_LOAD_ON_DEMAND", fnDIR_IDParameter, fsLOGIN_IDParameter, fsKEYWORDParameter, fcSHOW_SUBJParameter, fbSHOWALLParameter);
        }
    
        public virtual ObjectResult<spGET_DIRECTORIES_BY_DIR_ID_AUTHORITY_Result> spGET_DIRECTORIES_BY_DIR_ID_AUTHORITY(Nullable<long> fnDIR_ID, string fsTYPE)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_DIRECTORIES_BY_DIR_ID_AUTHORITY_Result>("spGET_DIRECTORIES_BY_DIR_ID_AUTHORITY", fnDIR_IDParameter, fsTYPEParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_DIR_GROUP_BY_GROUP_DIR(Nullable<long> fnDIR_ID, string fsGROUP_ID, string fsLIMIT_SUBJECT, string fsLIMIT_VIDEO, string fsLIMIT_AUDIO, string fsLIMIT_PHOTO, string fsLIMIT_DOC, string fsCREATED_BY)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsGROUP_IDParameter = fsGROUP_ID != null ?
                new ObjectParameter("fsGROUP_ID", fsGROUP_ID) :
                new ObjectParameter("fsGROUP_ID", typeof(string));
    
            var fsLIMIT_SUBJECTParameter = fsLIMIT_SUBJECT != null ?
                new ObjectParameter("fsLIMIT_SUBJECT", fsLIMIT_SUBJECT) :
                new ObjectParameter("fsLIMIT_SUBJECT", typeof(string));
    
            var fsLIMIT_VIDEOParameter = fsLIMIT_VIDEO != null ?
                new ObjectParameter("fsLIMIT_VIDEO", fsLIMIT_VIDEO) :
                new ObjectParameter("fsLIMIT_VIDEO", typeof(string));
    
            var fsLIMIT_AUDIOParameter = fsLIMIT_AUDIO != null ?
                new ObjectParameter("fsLIMIT_AUDIO", fsLIMIT_AUDIO) :
                new ObjectParameter("fsLIMIT_AUDIO", typeof(string));
    
            var fsLIMIT_PHOTOParameter = fsLIMIT_PHOTO != null ?
                new ObjectParameter("fsLIMIT_PHOTO", fsLIMIT_PHOTO) :
                new ObjectParameter("fsLIMIT_PHOTO", typeof(string));
    
            var fsLIMIT_DOCParameter = fsLIMIT_DOC != null ?
                new ObjectParameter("fsLIMIT_DOC", fsLIMIT_DOC) :
                new ObjectParameter("fsLIMIT_DOC", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_DIR_GROUP_BY_GROUP_DIR", fnDIR_IDParameter, fsGROUP_IDParameter, fsLIMIT_SUBJECTParameter, fsLIMIT_VIDEOParameter, fsLIMIT_AUDIOParameter, fsLIMIT_PHOTOParameter, fsLIMIT_DOCParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_DIR_USER_BY_USER_DIR(Nullable<long> fnDIR_ID, string fsLOGIN_ID, string fsLIMIT_SUBJECT, string fsLIMIT_VIDEO, string fsLIMIT_AUDIO, string fsLIMIT_PHOTO, string fsLIMIT_DOC, string fsCREATED_BY)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fsLIMIT_SUBJECTParameter = fsLIMIT_SUBJECT != null ?
                new ObjectParameter("fsLIMIT_SUBJECT", fsLIMIT_SUBJECT) :
                new ObjectParameter("fsLIMIT_SUBJECT", typeof(string));
    
            var fsLIMIT_VIDEOParameter = fsLIMIT_VIDEO != null ?
                new ObjectParameter("fsLIMIT_VIDEO", fsLIMIT_VIDEO) :
                new ObjectParameter("fsLIMIT_VIDEO", typeof(string));
    
            var fsLIMIT_AUDIOParameter = fsLIMIT_AUDIO != null ?
                new ObjectParameter("fsLIMIT_AUDIO", fsLIMIT_AUDIO) :
                new ObjectParameter("fsLIMIT_AUDIO", typeof(string));
    
            var fsLIMIT_PHOTOParameter = fsLIMIT_PHOTO != null ?
                new ObjectParameter("fsLIMIT_PHOTO", fsLIMIT_PHOTO) :
                new ObjectParameter("fsLIMIT_PHOTO", typeof(string));
    
            var fsLIMIT_DOCParameter = fsLIMIT_DOC != null ?
                new ObjectParameter("fsLIMIT_DOC", fsLIMIT_DOC) :
                new ObjectParameter("fsLIMIT_DOC", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_DIR_USER_BY_USER_DIR", fnDIR_IDParameter, fsLOGIN_IDParameter, fsLIMIT_SUBJECTParameter, fsLIMIT_VIDEOParameter, fsLIMIT_AUDIOParameter, fsLIMIT_PHOTOParameter, fsLIMIT_DOCParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_DIR_GROUP_BY_GROUP_DIR(Nullable<long> fnDIR_ID, string fsGROUP_ID, string fsLIMIT_SUBJECT, string fsLIMIT_VIDEO, string fsLIMIT_AUDIO, string fsLIMIT_PHOTO, string fsLIMIT_DOC, string fsUPDATED_BY)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsGROUP_IDParameter = fsGROUP_ID != null ?
                new ObjectParameter("fsGROUP_ID", fsGROUP_ID) :
                new ObjectParameter("fsGROUP_ID", typeof(string));
    
            var fsLIMIT_SUBJECTParameter = fsLIMIT_SUBJECT != null ?
                new ObjectParameter("fsLIMIT_SUBJECT", fsLIMIT_SUBJECT) :
                new ObjectParameter("fsLIMIT_SUBJECT", typeof(string));
    
            var fsLIMIT_VIDEOParameter = fsLIMIT_VIDEO != null ?
                new ObjectParameter("fsLIMIT_VIDEO", fsLIMIT_VIDEO) :
                new ObjectParameter("fsLIMIT_VIDEO", typeof(string));
    
            var fsLIMIT_AUDIOParameter = fsLIMIT_AUDIO != null ?
                new ObjectParameter("fsLIMIT_AUDIO", fsLIMIT_AUDIO) :
                new ObjectParameter("fsLIMIT_AUDIO", typeof(string));
    
            var fsLIMIT_PHOTOParameter = fsLIMIT_PHOTO != null ?
                new ObjectParameter("fsLIMIT_PHOTO", fsLIMIT_PHOTO) :
                new ObjectParameter("fsLIMIT_PHOTO", typeof(string));
    
            var fsLIMIT_DOCParameter = fsLIMIT_DOC != null ?
                new ObjectParameter("fsLIMIT_DOC", fsLIMIT_DOC) :
                new ObjectParameter("fsLIMIT_DOC", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_DIR_GROUP_BY_GROUP_DIR", fnDIR_IDParameter, fsGROUP_IDParameter, fsLIMIT_SUBJECTParameter, fsLIMIT_VIDEOParameter, fsLIMIT_AUDIOParameter, fsLIMIT_PHOTOParameter, fsLIMIT_DOCParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_DIR_USER_BY_USER_DIR(Nullable<long> fnDIR_ID, string fsLOGIN_ID, string fsLIMIT_SUBJECT, string fsLIMIT_VIDEO, string fsLIMIT_AUDIO, string fsLIMIT_PHOTO, string fsLIMIT_DOC, string fsUPDATED_BY)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fsLIMIT_SUBJECTParameter = fsLIMIT_SUBJECT != null ?
                new ObjectParameter("fsLIMIT_SUBJECT", fsLIMIT_SUBJECT) :
                new ObjectParameter("fsLIMIT_SUBJECT", typeof(string));
    
            var fsLIMIT_VIDEOParameter = fsLIMIT_VIDEO != null ?
                new ObjectParameter("fsLIMIT_VIDEO", fsLIMIT_VIDEO) :
                new ObjectParameter("fsLIMIT_VIDEO", typeof(string));
    
            var fsLIMIT_AUDIOParameter = fsLIMIT_AUDIO != null ?
                new ObjectParameter("fsLIMIT_AUDIO", fsLIMIT_AUDIO) :
                new ObjectParameter("fsLIMIT_AUDIO", typeof(string));
    
            var fsLIMIT_PHOTOParameter = fsLIMIT_PHOTO != null ?
                new ObjectParameter("fsLIMIT_PHOTO", fsLIMIT_PHOTO) :
                new ObjectParameter("fsLIMIT_PHOTO", typeof(string));
    
            var fsLIMIT_DOCParameter = fsLIMIT_DOC != null ?
                new ObjectParameter("fsLIMIT_DOC", fsLIMIT_DOC) :
                new ObjectParameter("fsLIMIT_DOC", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_DIR_USER_BY_USER_DIR", fnDIR_IDParameter, fsLOGIN_IDParameter, fsLIMIT_SUBJECTParameter, fsLIMIT_VIDEOParameter, fsLIMIT_AUDIOParameter, fsLIMIT_PHOTOParameter, fsLIMIT_DOCParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_DIR_GROUP(Nullable<long> fnDIR_ID, string fsGROUP_ID, string fsDELETED_BY)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsGROUP_IDParameter = fsGROUP_ID != null ?
                new ObjectParameter("fsGROUP_ID", fsGROUP_ID) :
                new ObjectParameter("fsGROUP_ID", typeof(string));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_DIR_GROUP", fnDIR_IDParameter, fsGROUP_IDParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_DIR_USER(Nullable<long> fnDIR_ID, string fsLOGIN_ID, string fsDELETED_BY)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_DIR_USER", fnDIR_IDParameter, fsLOGIN_IDParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_DIRECTORIES(Nullable<long> fnDIR_ID, string fsDELETED_BY)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_DIRECTORIES", fnDIR_IDParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_GROUPS_NOTIN_DIR_GROUP_BY_DIR_ID_Result> spGET_GROUPS_NOTIN_DIR_GROUP_BY_DIR_ID(Nullable<long> fnDIR_ID)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_GROUPS_NOTIN_DIR_GROUP_BY_DIR_ID_Result>("spGET_GROUPS_NOTIN_DIR_GROUP_BY_DIR_ID", fnDIR_IDParameter);
        }
    
        public virtual ObjectResult<spGET_USERS_NOTIN_DIR_USER_BY_DIR_ID_Result> spGET_USERS_NOTIN_DIR_USER_BY_DIR_ID(Nullable<long> fnDIR_ID, string fsLOGIN_ID)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_USERS_NOTIN_DIR_USER_BY_DIR_ID_Result>("spGET_USERS_NOTIN_DIR_USER_BY_DIR_ID", fnDIR_IDParameter, fsLOGIN_IDParameter);
        }
    
        public virtual ObjectResult<string> spGET_CODE_CUSTOM_USED(string fsCODE_ID, string fsCODE)
        {
            var fsCODE_IDParameter = fsCODE_ID != null ?
                new ObjectParameter("fsCODE_ID", fsCODE_ID) :
                new ObjectParameter("fsCODE_ID", typeof(string));
    
            var fsCODEParameter = fsCODE != null ?
                new ObjectParameter("fsCODE", fsCODE) :
                new ObjectParameter("fsCODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGET_CODE_CUSTOM_USED", fsCODE_IDParameter, fsCODEParameter);
        }
    
        public virtual ObjectResult<spGET_CONFIG_Result> spGET_CONFIG(string fsKEY)
        {
            var fsKEYParameter = fsKEY != null ?
                new ObjectParameter("fsKEY", fsKEY) :
                new ObjectParameter("fsKEY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_CONFIG_Result>("spGET_CONFIG", fsKEYParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_TEMPLATE_FIELDS(Nullable<int> fnTEMP_ID, string fsFIELD, string fsDELETED_BY)
        {
            var fnTEMP_IDParameter = fnTEMP_ID.HasValue ?
                new ObjectParameter("fnTEMP_ID", fnTEMP_ID) :
                new ObjectParameter("fnTEMP_ID", typeof(int));
    
            var fsFIELDParameter = fsFIELD != null ?
                new ObjectParameter("fsFIELD", fsFIELD) :
                new ObjectParameter("fsFIELD", typeof(string));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_TEMPLATE_FIELDS", fnTEMP_IDParameter, fsFIELDParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_DIR_BY_PARENT_ID(Nullable<long> fnDIR_ID, Nullable<long> fnPARENT_ID, string fsUPDATED_BY)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fnPARENT_IDParameter = fnPARENT_ID.HasValue ?
                new ObjectParameter("fnPARENT_ID", fnPARENT_ID) :
                new ObjectParameter("fnPARENT_ID", typeof(long));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_DIR_BY_PARENT_ID", fnDIR_IDParameter, fnPARENT_IDParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_DIRECTORIES_AND_SUBJECTS_BY_DIR_ID_Result> spGET_DIRECTORIES_AND_SUBJECTS_BY_DIR_ID(Nullable<long> fnDIR_ID)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_DIRECTORIES_AND_SUBJECTS_BY_DIR_ID_Result>("spGET_DIRECTORIES_AND_SUBJECTS_BY_DIR_ID", fnDIR_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_PRE_Result> spGET_ARC_PRE(Nullable<long> fnPRE_ID, string fsNAME, string fsTYPE, Nullable<int> fnTEMP_ID)
        {
            var fnPRE_IDParameter = fnPRE_ID.HasValue ?
                new ObjectParameter("fnPRE_ID", fnPRE_ID) :
                new ObjectParameter("fnPRE_ID", typeof(long));
    
            var fsNAMEParameter = fsNAME != null ?
                new ObjectParameter("fsNAME", fsNAME) :
                new ObjectParameter("fsNAME", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fnTEMP_IDParameter = fnTEMP_ID.HasValue ?
                new ObjectParameter("fnTEMP_ID", fnTEMP_ID) :
                new ObjectParameter("fnTEMP_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_PRE_Result>("spGET_ARC_PRE", fnPRE_IDParameter, fsNAMEParameter, fsTYPEParameter, fnTEMP_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_PRE_ATTRIBUTE_Result> spGET_ARC_PRE_ATTRIBUTE(Nullable<long> fnPRE_ID, Nullable<int> fnTEMP_ID)
        {
            var fnPRE_IDParameter = fnPRE_ID.HasValue ?
                new ObjectParameter("fnPRE_ID", fnPRE_ID) :
                new ObjectParameter("fnPRE_ID", typeof(long));
    
            var fnTEMP_IDParameter = fnTEMP_ID.HasValue ?
                new ObjectParameter("fnTEMP_ID", fnTEMP_ID) :
                new ObjectParameter("fnTEMP_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_PRE_ATTRIBUTE_Result>("spGET_ARC_PRE_ATTRIBUTE", fnPRE_IDParameter, fnTEMP_IDParameter);
        }
    
        public virtual ObjectResult<string> spGET_SUBJ_PATH_BY_SUBJECT_ID(string fsSUBJ_ID)
        {
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGET_SUBJ_PATH_BY_SUBJECT_ID", fsSUBJ_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_VIDEO_BY_SUBJ_ID_Result> spGET_ARC_VIDEO_BY_SUBJ_ID(string fsSUBJ_ID)
        {
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_VIDEO_BY_SUBJ_ID_Result>("spGET_ARC_VIDEO_BY_SUBJ_ID", fsSUBJ_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_AUDIO_BY_SUBJ_ID_Result> spGET_ARC_AUDIO_BY_SUBJ_ID(string fsSUBJ_ID)
        {
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_AUDIO_BY_SUBJ_ID_Result>("spGET_ARC_AUDIO_BY_SUBJ_ID", fsSUBJ_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_DOC_BY_SUBJ_ID_Result> spGET_ARC_DOC_BY_SUBJ_ID(string fsSUBJ_ID)
        {
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_DOC_BY_SUBJ_ID_Result>("spGET_ARC_DOC_BY_SUBJ_ID", fsSUBJ_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_PHOTO_BY_SUBJ_ID_Result> spGET_ARC_PHOTO_BY_SUBJ_ID(string fsSUBJ_ID)
        {
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_PHOTO_BY_SUBJ_ID_Result>("spGET_ARC_PHOTO_BY_SUBJ_ID", fsSUBJ_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_AUDIO_Result> spGET_ARC_AUDIO(string fsFILE_NO, string fsSUBJ_ID)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_AUDIO_Result>("spGET_ARC_AUDIO", fsFILE_NOParameter, fsSUBJ_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_DOC_Result> spGET_ARC_DOC(string fsFILE_NO, string fsSUBJ_ID)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_DOC_Result>("spGET_ARC_DOC", fsFILE_NOParameter, fsSUBJ_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_PHOTO_Result> spGET_ARC_PHOTO(string fsFILE_NO, string fsSUBJ_ID)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_PHOTO_Result>("spGET_ARC_PHOTO", fsFILE_NOParameter, fsSUBJ_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_VIDEO_Result> spGET_ARC_VIDEO(string fsFILE_NO, string fsSUBJ_ID)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_VIDEO_Result>("spGET_ARC_VIDEO", fsFILE_NOParameter, fsSUBJ_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_AUDIO_ATTRIBUTE_Result> spGET_ARC_AUDIO_ATTRIBUTE(string fsFILE_NO)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_AUDIO_ATTRIBUTE_Result>("spGET_ARC_AUDIO_ATTRIBUTE", fsFILE_NOParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_DOC_ATTRIBUTE_Result> spGET_ARC_DOC_ATTRIBUTE(string fsFILE_NO)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_DOC_ATTRIBUTE_Result>("spGET_ARC_DOC_ATTRIBUTE", fsFILE_NOParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_PHOTO_ATTRIBUTE_Result> spGET_ARC_PHOTO_ATTRIBUTE(string fsFILE_NO)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_PHOTO_ATTRIBUTE_Result>("spGET_ARC_PHOTO_ATTRIBUTE", fsFILE_NOParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_VIDEO_ATTRIBUTE_Result> spGET_ARC_VIDEO_ATTRIBUTE(string fsFILE_NO)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_VIDEO_ATTRIBUTE_Result>("spGET_ARC_VIDEO_ATTRIBUTE", fsFILE_NOParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_VIDEO_K_Result> spGET_ARC_VIDEO_K(string fsFILE_NO, string fsTIME)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fsTIMEParameter = fsTIME != null ?
                new ObjectParameter("fsTIME", fsTIME) :
                new ObjectParameter("fsTIME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_VIDEO_K_Result>("spGET_ARC_VIDEO_K", fsFILE_NOParameter, fsTIMEParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_ARC_VIDEO_D(string fsFILE_NO, Nullable<int> fnSEQ_NO, string fsDELETED_BY)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fnSEQ_NOParameter = fnSEQ_NO.HasValue ?
                new ObjectParameter("fnSEQ_NO", fnSEQ_NO) :
                new ObjectParameter("fnSEQ_NO", typeof(int));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_ARC_VIDEO_D", fsFILE_NOParameter, fnSEQ_NOParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_AUDIO_D_Result> spGET_ARC_AUDIO_D(string fsFILE_NO, Nullable<int> fnSEQ_NO)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fnSEQ_NOParameter = fnSEQ_NO.HasValue ?
                new ObjectParameter("fnSEQ_NO", fnSEQ_NO) :
                new ObjectParameter("fnSEQ_NO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_AUDIO_D_Result>("spGET_ARC_AUDIO_D", fsFILE_NOParameter, fnSEQ_NOParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_VIDEO_D_Result> spGET_ARC_VIDEO_D(string fsFILE_NO, Nullable<int> fnSEQ_NO)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fnSEQ_NOParameter = fnSEQ_NO.HasValue ?
                new ObjectParameter("fnSEQ_NO", fnSEQ_NO) :
                new ObjectParameter("fnSEQ_NO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_VIDEO_D_Result>("spGET_ARC_VIDEO_D", fsFILE_NOParameter, fnSEQ_NOParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_SUBJECT(string fsTITLE, string fsDESCRIPTION, Nullable<long> fnDIR_ID, string fsTYPE1, string fsTYPE2, string fsTYPE3, Nullable<long> fnPRE_ID, string fsATTRIBUTE1, string fsATTRIBUTE2, string fsATTRIBUTE3, string fsATTRIBUTE4, string fsATTRIBUTE5, string fsATTRIBUTE6, string fsATTRIBUTE7, string fsATTRIBUTE8, string fsATTRIBUTE9, string fsATTRIBUTE10, string fsATTRIBUTE11, string fsATTRIBUTE12, string fsATTRIBUTE13, string fsATTRIBUTE14, string fsATTRIBUTE15, string fsATTRIBUTE16, string fsATTRIBUTE17, string fsATTRIBUTE18, string fsATTRIBUTE19, string fsATTRIBUTE20, string fsATTRIBUTE21, string fsATTRIBUTE22, string fsATTRIBUTE23, string fsATTRIBUTE24, string fsATTRIBUTE25, string fsATTRIBUTE26, string fsATTRIBUTE27, string fsATTRIBUTE28, string fsATTRIBUTE29, string fsATTRIBUTE30, string fsATTRIBUTE31, string fsATTRIBUTE32, string fsATTRIBUTE33, string fsATTRIBUTE34, string fsATTRIBUTE35, string fsATTRIBUTE36, string fsATTRIBUTE37, string fsATTRIBUTE38, string fsATTRIBUTE39, string fsATTRIBUTE40, string fsATTRIBUTE41, string fsATTRIBUTE42, string fsATTRIBUTE43, string fsATTRIBUTE44, string fsATTRIBUTE45, string fsATTRIBUTE46, string fsATTRIBUTE47, string fsATTRIBUTE48, string fsATTRIBUTE49, string fsATTRIBUTE50, string fsCREATED_BY)
        {
            var fsTITLEParameter = fsTITLE != null ?
                new ObjectParameter("fsTITLE", fsTITLE) :
                new ObjectParameter("fsTITLE", typeof(string));
    
            var fsDESCRIPTIONParameter = fsDESCRIPTION != null ?
                new ObjectParameter("fsDESCRIPTION", fsDESCRIPTION) :
                new ObjectParameter("fsDESCRIPTION", typeof(string));
    
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsTYPE1Parameter = fsTYPE1 != null ?
                new ObjectParameter("fsTYPE1", fsTYPE1) :
                new ObjectParameter("fsTYPE1", typeof(string));
    
            var fsTYPE2Parameter = fsTYPE2 != null ?
                new ObjectParameter("fsTYPE2", fsTYPE2) :
                new ObjectParameter("fsTYPE2", typeof(string));
    
            var fsTYPE3Parameter = fsTYPE3 != null ?
                new ObjectParameter("fsTYPE3", fsTYPE3) :
                new ObjectParameter("fsTYPE3", typeof(string));
    
            var fnPRE_IDParameter = fnPRE_ID.HasValue ?
                new ObjectParameter("fnPRE_ID", fnPRE_ID) :
                new ObjectParameter("fnPRE_ID", typeof(long));
    
            var fsATTRIBUTE1Parameter = fsATTRIBUTE1 != null ?
                new ObjectParameter("fsATTRIBUTE1", fsATTRIBUTE1) :
                new ObjectParameter("fsATTRIBUTE1", typeof(string));
    
            var fsATTRIBUTE2Parameter = fsATTRIBUTE2 != null ?
                new ObjectParameter("fsATTRIBUTE2", fsATTRIBUTE2) :
                new ObjectParameter("fsATTRIBUTE2", typeof(string));
    
            var fsATTRIBUTE3Parameter = fsATTRIBUTE3 != null ?
                new ObjectParameter("fsATTRIBUTE3", fsATTRIBUTE3) :
                new ObjectParameter("fsATTRIBUTE3", typeof(string));
    
            var fsATTRIBUTE4Parameter = fsATTRIBUTE4 != null ?
                new ObjectParameter("fsATTRIBUTE4", fsATTRIBUTE4) :
                new ObjectParameter("fsATTRIBUTE4", typeof(string));
    
            var fsATTRIBUTE5Parameter = fsATTRIBUTE5 != null ?
                new ObjectParameter("fsATTRIBUTE5", fsATTRIBUTE5) :
                new ObjectParameter("fsATTRIBUTE5", typeof(string));
    
            var fsATTRIBUTE6Parameter = fsATTRIBUTE6 != null ?
                new ObjectParameter("fsATTRIBUTE6", fsATTRIBUTE6) :
                new ObjectParameter("fsATTRIBUTE6", typeof(string));
    
            var fsATTRIBUTE7Parameter = fsATTRIBUTE7 != null ?
                new ObjectParameter("fsATTRIBUTE7", fsATTRIBUTE7) :
                new ObjectParameter("fsATTRIBUTE7", typeof(string));
    
            var fsATTRIBUTE8Parameter = fsATTRIBUTE8 != null ?
                new ObjectParameter("fsATTRIBUTE8", fsATTRIBUTE8) :
                new ObjectParameter("fsATTRIBUTE8", typeof(string));
    
            var fsATTRIBUTE9Parameter = fsATTRIBUTE9 != null ?
                new ObjectParameter("fsATTRIBUTE9", fsATTRIBUTE9) :
                new ObjectParameter("fsATTRIBUTE9", typeof(string));
    
            var fsATTRIBUTE10Parameter = fsATTRIBUTE10 != null ?
                new ObjectParameter("fsATTRIBUTE10", fsATTRIBUTE10) :
                new ObjectParameter("fsATTRIBUTE10", typeof(string));
    
            var fsATTRIBUTE11Parameter = fsATTRIBUTE11 != null ?
                new ObjectParameter("fsATTRIBUTE11", fsATTRIBUTE11) :
                new ObjectParameter("fsATTRIBUTE11", typeof(string));
    
            var fsATTRIBUTE12Parameter = fsATTRIBUTE12 != null ?
                new ObjectParameter("fsATTRIBUTE12", fsATTRIBUTE12) :
                new ObjectParameter("fsATTRIBUTE12", typeof(string));
    
            var fsATTRIBUTE13Parameter = fsATTRIBUTE13 != null ?
                new ObjectParameter("fsATTRIBUTE13", fsATTRIBUTE13) :
                new ObjectParameter("fsATTRIBUTE13", typeof(string));
    
            var fsATTRIBUTE14Parameter = fsATTRIBUTE14 != null ?
                new ObjectParameter("fsATTRIBUTE14", fsATTRIBUTE14) :
                new ObjectParameter("fsATTRIBUTE14", typeof(string));
    
            var fsATTRIBUTE15Parameter = fsATTRIBUTE15 != null ?
                new ObjectParameter("fsATTRIBUTE15", fsATTRIBUTE15) :
                new ObjectParameter("fsATTRIBUTE15", typeof(string));
    
            var fsATTRIBUTE16Parameter = fsATTRIBUTE16 != null ?
                new ObjectParameter("fsATTRIBUTE16", fsATTRIBUTE16) :
                new ObjectParameter("fsATTRIBUTE16", typeof(string));
    
            var fsATTRIBUTE17Parameter = fsATTRIBUTE17 != null ?
                new ObjectParameter("fsATTRIBUTE17", fsATTRIBUTE17) :
                new ObjectParameter("fsATTRIBUTE17", typeof(string));
    
            var fsATTRIBUTE18Parameter = fsATTRIBUTE18 != null ?
                new ObjectParameter("fsATTRIBUTE18", fsATTRIBUTE18) :
                new ObjectParameter("fsATTRIBUTE18", typeof(string));
    
            var fsATTRIBUTE19Parameter = fsATTRIBUTE19 != null ?
                new ObjectParameter("fsATTRIBUTE19", fsATTRIBUTE19) :
                new ObjectParameter("fsATTRIBUTE19", typeof(string));
    
            var fsATTRIBUTE20Parameter = fsATTRIBUTE20 != null ?
                new ObjectParameter("fsATTRIBUTE20", fsATTRIBUTE20) :
                new ObjectParameter("fsATTRIBUTE20", typeof(string));
    
            var fsATTRIBUTE21Parameter = fsATTRIBUTE21 != null ?
                new ObjectParameter("fsATTRIBUTE21", fsATTRIBUTE21) :
                new ObjectParameter("fsATTRIBUTE21", typeof(string));
    
            var fsATTRIBUTE22Parameter = fsATTRIBUTE22 != null ?
                new ObjectParameter("fsATTRIBUTE22", fsATTRIBUTE22) :
                new ObjectParameter("fsATTRIBUTE22", typeof(string));
    
            var fsATTRIBUTE23Parameter = fsATTRIBUTE23 != null ?
                new ObjectParameter("fsATTRIBUTE23", fsATTRIBUTE23) :
                new ObjectParameter("fsATTRIBUTE23", typeof(string));
    
            var fsATTRIBUTE24Parameter = fsATTRIBUTE24 != null ?
                new ObjectParameter("fsATTRIBUTE24", fsATTRIBUTE24) :
                new ObjectParameter("fsATTRIBUTE24", typeof(string));
    
            var fsATTRIBUTE25Parameter = fsATTRIBUTE25 != null ?
                new ObjectParameter("fsATTRIBUTE25", fsATTRIBUTE25) :
                new ObjectParameter("fsATTRIBUTE25", typeof(string));
    
            var fsATTRIBUTE26Parameter = fsATTRIBUTE26 != null ?
                new ObjectParameter("fsATTRIBUTE26", fsATTRIBUTE26) :
                new ObjectParameter("fsATTRIBUTE26", typeof(string));
    
            var fsATTRIBUTE27Parameter = fsATTRIBUTE27 != null ?
                new ObjectParameter("fsATTRIBUTE27", fsATTRIBUTE27) :
                new ObjectParameter("fsATTRIBUTE27", typeof(string));
    
            var fsATTRIBUTE28Parameter = fsATTRIBUTE28 != null ?
                new ObjectParameter("fsATTRIBUTE28", fsATTRIBUTE28) :
                new ObjectParameter("fsATTRIBUTE28", typeof(string));
    
            var fsATTRIBUTE29Parameter = fsATTRIBUTE29 != null ?
                new ObjectParameter("fsATTRIBUTE29", fsATTRIBUTE29) :
                new ObjectParameter("fsATTRIBUTE29", typeof(string));
    
            var fsATTRIBUTE30Parameter = fsATTRIBUTE30 != null ?
                new ObjectParameter("fsATTRIBUTE30", fsATTRIBUTE30) :
                new ObjectParameter("fsATTRIBUTE30", typeof(string));
    
            var fsATTRIBUTE31Parameter = fsATTRIBUTE31 != null ?
                new ObjectParameter("fsATTRIBUTE31", fsATTRIBUTE31) :
                new ObjectParameter("fsATTRIBUTE31", typeof(string));
    
            var fsATTRIBUTE32Parameter = fsATTRIBUTE32 != null ?
                new ObjectParameter("fsATTRIBUTE32", fsATTRIBUTE32) :
                new ObjectParameter("fsATTRIBUTE32", typeof(string));
    
            var fsATTRIBUTE33Parameter = fsATTRIBUTE33 != null ?
                new ObjectParameter("fsATTRIBUTE33", fsATTRIBUTE33) :
                new ObjectParameter("fsATTRIBUTE33", typeof(string));
    
            var fsATTRIBUTE34Parameter = fsATTRIBUTE34 != null ?
                new ObjectParameter("fsATTRIBUTE34", fsATTRIBUTE34) :
                new ObjectParameter("fsATTRIBUTE34", typeof(string));
    
            var fsATTRIBUTE35Parameter = fsATTRIBUTE35 != null ?
                new ObjectParameter("fsATTRIBUTE35", fsATTRIBUTE35) :
                new ObjectParameter("fsATTRIBUTE35", typeof(string));
    
            var fsATTRIBUTE36Parameter = fsATTRIBUTE36 != null ?
                new ObjectParameter("fsATTRIBUTE36", fsATTRIBUTE36) :
                new ObjectParameter("fsATTRIBUTE36", typeof(string));
    
            var fsATTRIBUTE37Parameter = fsATTRIBUTE37 != null ?
                new ObjectParameter("fsATTRIBUTE37", fsATTRIBUTE37) :
                new ObjectParameter("fsATTRIBUTE37", typeof(string));
    
            var fsATTRIBUTE38Parameter = fsATTRIBUTE38 != null ?
                new ObjectParameter("fsATTRIBUTE38", fsATTRIBUTE38) :
                new ObjectParameter("fsATTRIBUTE38", typeof(string));
    
            var fsATTRIBUTE39Parameter = fsATTRIBUTE39 != null ?
                new ObjectParameter("fsATTRIBUTE39", fsATTRIBUTE39) :
                new ObjectParameter("fsATTRIBUTE39", typeof(string));
    
            var fsATTRIBUTE40Parameter = fsATTRIBUTE40 != null ?
                new ObjectParameter("fsATTRIBUTE40", fsATTRIBUTE40) :
                new ObjectParameter("fsATTRIBUTE40", typeof(string));
    
            var fsATTRIBUTE41Parameter = fsATTRIBUTE41 != null ?
                new ObjectParameter("fsATTRIBUTE41", fsATTRIBUTE41) :
                new ObjectParameter("fsATTRIBUTE41", typeof(string));
    
            var fsATTRIBUTE42Parameter = fsATTRIBUTE42 != null ?
                new ObjectParameter("fsATTRIBUTE42", fsATTRIBUTE42) :
                new ObjectParameter("fsATTRIBUTE42", typeof(string));
    
            var fsATTRIBUTE43Parameter = fsATTRIBUTE43 != null ?
                new ObjectParameter("fsATTRIBUTE43", fsATTRIBUTE43) :
                new ObjectParameter("fsATTRIBUTE43", typeof(string));
    
            var fsATTRIBUTE44Parameter = fsATTRIBUTE44 != null ?
                new ObjectParameter("fsATTRIBUTE44", fsATTRIBUTE44) :
                new ObjectParameter("fsATTRIBUTE44", typeof(string));
    
            var fsATTRIBUTE45Parameter = fsATTRIBUTE45 != null ?
                new ObjectParameter("fsATTRIBUTE45", fsATTRIBUTE45) :
                new ObjectParameter("fsATTRIBUTE45", typeof(string));
    
            var fsATTRIBUTE46Parameter = fsATTRIBUTE46 != null ?
                new ObjectParameter("fsATTRIBUTE46", fsATTRIBUTE46) :
                new ObjectParameter("fsATTRIBUTE46", typeof(string));
    
            var fsATTRIBUTE47Parameter = fsATTRIBUTE47 != null ?
                new ObjectParameter("fsATTRIBUTE47", fsATTRIBUTE47) :
                new ObjectParameter("fsATTRIBUTE47", typeof(string));
    
            var fsATTRIBUTE48Parameter = fsATTRIBUTE48 != null ?
                new ObjectParameter("fsATTRIBUTE48", fsATTRIBUTE48) :
                new ObjectParameter("fsATTRIBUTE48", typeof(string));
    
            var fsATTRIBUTE49Parameter = fsATTRIBUTE49 != null ?
                new ObjectParameter("fsATTRIBUTE49", fsATTRIBUTE49) :
                new ObjectParameter("fsATTRIBUTE49", typeof(string));
    
            var fsATTRIBUTE50Parameter = fsATTRIBUTE50 != null ?
                new ObjectParameter("fsATTRIBUTE50", fsATTRIBUTE50) :
                new ObjectParameter("fsATTRIBUTE50", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_SUBJECT", fsTITLEParameter, fsDESCRIPTIONParameter, fnDIR_IDParameter, fsTYPE1Parameter, fsTYPE2Parameter, fsTYPE3Parameter, fnPRE_IDParameter, fsATTRIBUTE1Parameter, fsATTRIBUTE2Parameter, fsATTRIBUTE3Parameter, fsATTRIBUTE4Parameter, fsATTRIBUTE5Parameter, fsATTRIBUTE6Parameter, fsATTRIBUTE7Parameter, fsATTRIBUTE8Parameter, fsATTRIBUTE9Parameter, fsATTRIBUTE10Parameter, fsATTRIBUTE11Parameter, fsATTRIBUTE12Parameter, fsATTRIBUTE13Parameter, fsATTRIBUTE14Parameter, fsATTRIBUTE15Parameter, fsATTRIBUTE16Parameter, fsATTRIBUTE17Parameter, fsATTRIBUTE18Parameter, fsATTRIBUTE19Parameter, fsATTRIBUTE20Parameter, fsATTRIBUTE21Parameter, fsATTRIBUTE22Parameter, fsATTRIBUTE23Parameter, fsATTRIBUTE24Parameter, fsATTRIBUTE25Parameter, fsATTRIBUTE26Parameter, fsATTRIBUTE27Parameter, fsATTRIBUTE28Parameter, fsATTRIBUTE29Parameter, fsATTRIBUTE30Parameter, fsATTRIBUTE31Parameter, fsATTRIBUTE32Parameter, fsATTRIBUTE33Parameter, fsATTRIBUTE34Parameter, fsATTRIBUTE35Parameter, fsATTRIBUTE36Parameter, fsATTRIBUTE37Parameter, fsATTRIBUTE38Parameter, fsATTRIBUTE39Parameter, fsATTRIBUTE40Parameter, fsATTRIBUTE41Parameter, fsATTRIBUTE42Parameter, fsATTRIBUTE43Parameter, fsATTRIBUTE44Parameter, fsATTRIBUTE45Parameter, fsATTRIBUTE46Parameter, fsATTRIBUTE47Parameter, fsATTRIBUTE48Parameter, fsATTRIBUTE49Parameter, fsATTRIBUTE50Parameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spGET_L_NO_NEW_NO(string fsTYPE, string fsNAME, string fsHEAD, string fsBODY, Nullable<int> fsNO_L, string bY)
        {
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsNAMEParameter = fsNAME != null ?
                new ObjectParameter("fsNAME", fsNAME) :
                new ObjectParameter("fsNAME", typeof(string));
    
            var fsHEADParameter = fsHEAD != null ?
                new ObjectParameter("fsHEAD", fsHEAD) :
                new ObjectParameter("fsHEAD", typeof(string));
    
            var fsBODYParameter = fsBODY != null ?
                new ObjectParameter("fsBODY", fsBODY) :
                new ObjectParameter("fsBODY", typeof(string));
    
            var fsNO_LParameter = fsNO_L.HasValue ?
                new ObjectParameter("fsNO_L", fsNO_L) :
                new ObjectParameter("fsNO_L", typeof(int));
    
            var bYParameter = bY != null ?
                new ObjectParameter("BY", bY) :
                new ObjectParameter("BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGET_L_NO_NEW_NO", fsTYPEParameter, fsNAMEParameter, fsHEADParameter, fsBODYParameter, fsNO_LParameter, bYParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_SUBJECT(string fsSUBJ_ID, string fsDELETED_BY)
        {
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_SUBJECT", fsSUBJ_IDParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<string> spGET_L_WORK_IS_TRANSCODE_BY_TYPE_FILENO(string tYPE, string fILE_NO, string sWITCH)
        {
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            var fILE_NOParameter = fILE_NO != null ?
                new ObjectParameter("FILE_NO", fILE_NO) :
                new ObjectParameter("FILE_NO", typeof(string));
    
            var sWITCHParameter = sWITCH != null ?
                new ObjectParameter("SWITCH", sWITCH) :
                new ObjectParameter("SWITCH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGET_L_WORK_IS_TRANSCODE_BY_TYPE_FILENO", tYPEParameter, fILE_NOParameter, sWITCHParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_ARC_BY_TYPE_FILE_NO(string fsTYPE, string fsFILE_NOs, string fsREASON, string fsDELETED_BY)
        {
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsFILE_NOsParameter = fsFILE_NOs != null ?
                new ObjectParameter("fsFILE_NOs", fsFILE_NOs) :
                new ObjectParameter("fsFILE_NOs", typeof(string));
    
            var fsREASONParameter = fsREASON != null ?
                new ObjectParameter("fsREASON", fsREASON) :
                new ObjectParameter("fsREASON", typeof(string));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_ARC_BY_TYPE_FILE_NO", fsTYPEParameter, fsFILE_NOsParameter, fsREASONParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> spGET_L_WORK_TRANSCODE_ID_BY_FILENO(string fsFILE_NO)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("spGET_L_WORK_TRANSCODE_ID_BY_FILENO", fsFILE_NOParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_ARC_VIDEO_CHANGE(string fsFILE_NO, string fsFILE_TYPE, string fsFILE_TYPE_H, string fsFILE_TYPE_L, string fsFILE_SIZE, string fsFILE_SIZE_H, string fsFILE_SIZE_L, string fsFILE_PATH, string fsFILE_PATH_H, string fsFILE_PATH_L, string fxMEDIA_INFO, Nullable<int> fnWIDTH, Nullable<int> fnHEIGHT, Nullable<decimal> fdBEG_TIME, Nullable<decimal> fdEND_TIME, Nullable<decimal> fdDURATION, string fsRESOL_TAG, string fsUPDATED_BY, string fcDELETE_KF, Nullable<short> fnFILE_SECRET, string fsORI_FILE_NAME)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fsFILE_TYPEParameter = fsFILE_TYPE != null ?
                new ObjectParameter("fsFILE_TYPE", fsFILE_TYPE) :
                new ObjectParameter("fsFILE_TYPE", typeof(string));
    
            var fsFILE_TYPE_HParameter = fsFILE_TYPE_H != null ?
                new ObjectParameter("fsFILE_TYPE_H", fsFILE_TYPE_H) :
                new ObjectParameter("fsFILE_TYPE_H", typeof(string));
    
            var fsFILE_TYPE_LParameter = fsFILE_TYPE_L != null ?
                new ObjectParameter("fsFILE_TYPE_L", fsFILE_TYPE_L) :
                new ObjectParameter("fsFILE_TYPE_L", typeof(string));
    
            var fsFILE_SIZEParameter = fsFILE_SIZE != null ?
                new ObjectParameter("fsFILE_SIZE", fsFILE_SIZE) :
                new ObjectParameter("fsFILE_SIZE", typeof(string));
    
            var fsFILE_SIZE_HParameter = fsFILE_SIZE_H != null ?
                new ObjectParameter("fsFILE_SIZE_H", fsFILE_SIZE_H) :
                new ObjectParameter("fsFILE_SIZE_H", typeof(string));
    
            var fsFILE_SIZE_LParameter = fsFILE_SIZE_L != null ?
                new ObjectParameter("fsFILE_SIZE_L", fsFILE_SIZE_L) :
                new ObjectParameter("fsFILE_SIZE_L", typeof(string));
    
            var fsFILE_PATHParameter = fsFILE_PATH != null ?
                new ObjectParameter("fsFILE_PATH", fsFILE_PATH) :
                new ObjectParameter("fsFILE_PATH", typeof(string));
    
            var fsFILE_PATH_HParameter = fsFILE_PATH_H != null ?
                new ObjectParameter("fsFILE_PATH_H", fsFILE_PATH_H) :
                new ObjectParameter("fsFILE_PATH_H", typeof(string));
    
            var fsFILE_PATH_LParameter = fsFILE_PATH_L != null ?
                new ObjectParameter("fsFILE_PATH_L", fsFILE_PATH_L) :
                new ObjectParameter("fsFILE_PATH_L", typeof(string));
    
            var fxMEDIA_INFOParameter = fxMEDIA_INFO != null ?
                new ObjectParameter("fxMEDIA_INFO", fxMEDIA_INFO) :
                new ObjectParameter("fxMEDIA_INFO", typeof(string));
    
            var fnWIDTHParameter = fnWIDTH.HasValue ?
                new ObjectParameter("fnWIDTH", fnWIDTH) :
                new ObjectParameter("fnWIDTH", typeof(int));
    
            var fnHEIGHTParameter = fnHEIGHT.HasValue ?
                new ObjectParameter("fnHEIGHT", fnHEIGHT) :
                new ObjectParameter("fnHEIGHT", typeof(int));
    
            var fdBEG_TIMEParameter = fdBEG_TIME.HasValue ?
                new ObjectParameter("fdBEG_TIME", fdBEG_TIME) :
                new ObjectParameter("fdBEG_TIME", typeof(decimal));
    
            var fdEND_TIMEParameter = fdEND_TIME.HasValue ?
                new ObjectParameter("fdEND_TIME", fdEND_TIME) :
                new ObjectParameter("fdEND_TIME", typeof(decimal));
    
            var fdDURATIONParameter = fdDURATION.HasValue ?
                new ObjectParameter("fdDURATION", fdDURATION) :
                new ObjectParameter("fdDURATION", typeof(decimal));
    
            var fsRESOL_TAGParameter = fsRESOL_TAG != null ?
                new ObjectParameter("fsRESOL_TAG", fsRESOL_TAG) :
                new ObjectParameter("fsRESOL_TAG", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            var fcDELETE_KFParameter = fcDELETE_KF != null ?
                new ObjectParameter("fcDELETE_KF", fcDELETE_KF) :
                new ObjectParameter("fcDELETE_KF", typeof(string));
    
            var fnFILE_SECRETParameter = fnFILE_SECRET.HasValue ?
                new ObjectParameter("fnFILE_SECRET", fnFILE_SECRET) :
                new ObjectParameter("fnFILE_SECRET", typeof(short));
    
            var fsORI_FILE_NAMEParameter = fsORI_FILE_NAME != null ?
                new ObjectParameter("fsORI_FILE_NAME", fsORI_FILE_NAME) :
                new ObjectParameter("fsORI_FILE_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_ARC_VIDEO_CHANGE", fsFILE_NOParameter, fsFILE_TYPEParameter, fsFILE_TYPE_HParameter, fsFILE_TYPE_LParameter, fsFILE_SIZEParameter, fsFILE_SIZE_HParameter, fsFILE_SIZE_LParameter, fsFILE_PATHParameter, fsFILE_PATH_HParameter, fsFILE_PATH_LParameter, fxMEDIA_INFOParameter, fnWIDTHParameter, fnHEIGHTParameter, fdBEG_TIMEParameter, fdEND_TIMEParameter, fdDURATIONParameter, fsRESOL_TAGParameter, fsUPDATED_BYParameter, fcDELETE_KFParameter, fnFILE_SECRETParameter, fsORI_FILE_NAMEParameter);
        }
    
        public virtual ObjectResult<string> spDELETE_ARC_VIDEO_K(string fsFILE_NO, string fsTIME, string fsDELETED_BY)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fsTIMEParameter = fsTIME != null ?
                new ObjectParameter("fsTIME", fsTIME) :
                new ObjectParameter("fsTIME", typeof(string));
    
            var fsDELETED_BYParameter = fsDELETED_BY != null ?
                new ObjectParameter("fsDELETED_BY", fsDELETED_BY) :
                new ObjectParameter("fsDELETED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDELETE_ARC_VIDEO_K", fsFILE_NOParameter, fsTIMEParameter, fsDELETED_BYParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_ARC_VIDEO_K(string fsFILE_NO, string fsTIME, string fsTITLE, string fsDESCRIPTION, string fsFILE_PATH, string fsFILE_SIZE, string fsFILE_TYPE, string fsCREATED_BY)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fsTIMEParameter = fsTIME != null ?
                new ObjectParameter("fsTIME", fsTIME) :
                new ObjectParameter("fsTIME", typeof(string));
    
            var fsTITLEParameter = fsTITLE != null ?
                new ObjectParameter("fsTITLE", fsTITLE) :
                new ObjectParameter("fsTITLE", typeof(string));
    
            var fsDESCRIPTIONParameter = fsDESCRIPTION != null ?
                new ObjectParameter("fsDESCRIPTION", fsDESCRIPTION) :
                new ObjectParameter("fsDESCRIPTION", typeof(string));
    
            var fsFILE_PATHParameter = fsFILE_PATH != null ?
                new ObjectParameter("fsFILE_PATH", fsFILE_PATH) :
                new ObjectParameter("fsFILE_PATH", typeof(string));
    
            var fsFILE_SIZEParameter = fsFILE_SIZE != null ?
                new ObjectParameter("fsFILE_SIZE", fsFILE_SIZE) :
                new ObjectParameter("fsFILE_SIZE", typeof(string));
    
            var fsFILE_TYPEParameter = fsFILE_TYPE != null ?
                new ObjectParameter("fsFILE_TYPE", fsFILE_TYPE) :
                new ObjectParameter("fsFILE_TYPE", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_ARC_VIDEO_K", fsFILE_NOParameter, fsTIMEParameter, fsTITLEParameter, fsDESCRIPTIONParameter, fsFILE_PATHParameter, fsFILE_SIZEParameter, fsFILE_TYPEParameter, fsCREATED_BYParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spUPDATE_ARC_VIDEO_K(string fsFILE_NO, string fsTIME, string fsTITLE, string fsDESCRIPTION, string fsFILE_PATH, string fsFILE_SIZE, string fsFILE_TYPE, string fsUPDATED_BY)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fsTIMEParameter = fsTIME != null ?
                new ObjectParameter("fsTIME", fsTIME) :
                new ObjectParameter("fsTIME", typeof(string));
    
            var fsTITLEParameter = fsTITLE != null ?
                new ObjectParameter("fsTITLE", fsTITLE) :
                new ObjectParameter("fsTITLE", typeof(string));
    
            var fsDESCRIPTIONParameter = fsDESCRIPTION != null ?
                new ObjectParameter("fsDESCRIPTION", fsDESCRIPTION) :
                new ObjectParameter("fsDESCRIPTION", typeof(string));
    
            var fsFILE_PATHParameter = fsFILE_PATH != null ?
                new ObjectParameter("fsFILE_PATH", fsFILE_PATH) :
                new ObjectParameter("fsFILE_PATH", typeof(string));
    
            var fsFILE_SIZEParameter = fsFILE_SIZE != null ?
                new ObjectParameter("fsFILE_SIZE", fsFILE_SIZE) :
                new ObjectParameter("fsFILE_SIZE", typeof(string));
    
            var fsFILE_TYPEParameter = fsFILE_TYPE != null ?
                new ObjectParameter("fsFILE_TYPE", fsFILE_TYPE) :
                new ObjectParameter("fsFILE_TYPE", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spUPDATE_ARC_VIDEO_K", fsFILE_NOParameter, fsTIMEParameter, fsTITLEParameter, fsDESCRIPTIONParameter, fsFILE_PATHParameter, fsFILE_SIZEParameter, fsFILE_TYPEParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_ARC_VIDEO_K_HEADFRAME(string fsFILE_NO, string fsTIME, string fsUPDATED_BY)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fsTIMEParameter = fsTIME != null ?
                new ObjectParameter("fsTIME", fsTIME) :
                new ObjectParameter("fsTIME", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_ARC_VIDEO_K_HEADFRAME", fsFILE_NOParameter, fsTIMEParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_L_SRH_HOT_KW_Result> spGET_L_SRH_HOT_KW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_L_SRH_HOT_KW_Result>("spGET_L_SRH_HOT_KW");
        }
    
        public virtual ObjectResult<spGET_ARC_AUDIO_SEARCH_BY_FILE_NOS_Result> spGET_ARC_AUDIO_SEARCH_BY_FILE_NOS(string fsFILE_NOs)
        {
            var fsFILE_NOsParameter = fsFILE_NOs != null ?
                new ObjectParameter("fsFILE_NOs", fsFILE_NOs) :
                new ObjectParameter("fsFILE_NOs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_AUDIO_SEARCH_BY_FILE_NOS_Result>("spGET_ARC_AUDIO_SEARCH_BY_FILE_NOS", fsFILE_NOsParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_DOC_SEARCH_BY_FILE_NOS_Result> spGET_ARC_DOC_SEARCH_BY_FILE_NOS(string fsFILE_NOs)
        {
            var fsFILE_NOsParameter = fsFILE_NOs != null ?
                new ObjectParameter("fsFILE_NOs", fsFILE_NOs) :
                new ObjectParameter("fsFILE_NOs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_DOC_SEARCH_BY_FILE_NOS_Result>("spGET_ARC_DOC_SEARCH_BY_FILE_NOS", fsFILE_NOsParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_PHOTO_SEARCH_BY_FILE_NOS_Result> spGET_ARC_PHOTO_SEARCH_BY_FILE_NOS(string fsFILE_NOs)
        {
            var fsFILE_NOsParameter = fsFILE_NOs != null ?
                new ObjectParameter("fsFILE_NOs", fsFILE_NOs) :
                new ObjectParameter("fsFILE_NOs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_PHOTO_SEARCH_BY_FILE_NOS_Result>("spGET_ARC_PHOTO_SEARCH_BY_FILE_NOS", fsFILE_NOsParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_VIDEO_SEARCH_BY_FILE_NOS_Result> spGET_ARC_VIDEO_SEARCH_BY_FILE_NOS(string fsFILE_NOs)
        {
            var fsFILE_NOsParameter = fsFILE_NOs != null ?
                new ObjectParameter("fsFILE_NOs", fsFILE_NOs) :
                new ObjectParameter("fsFILE_NOs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_VIDEO_SEARCH_BY_FILE_NOS_Result>("spGET_ARC_VIDEO_SEARCH_BY_FILE_NOS", fsFILE_NOsParameter);
        }
    
        public virtual ObjectResult<spTSM_GET_FILE_UNCPATH_TO_TSMPATH_Result> spTSM_GET_FILE_UNCPATH_TO_TSMPATH(string fsFILE_NOs)
        {
            var fsFILE_NOsParameter = fsFILE_NOs != null ?
                new ObjectParameter("fsFILE_NOs", fsFILE_NOs) :
                new ObjectParameter("fsFILE_NOs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTSM_GET_FILE_UNCPATH_TO_TSMPATH_Result>("spTSM_GET_FILE_UNCPATH_TO_TSMPATH", fsFILE_NOsParameter);
        }
    
        public virtual ObjectResult<spGET_DIRECTORIES_BY_DIR_ID_AUTHORITY_LOGIN_ID_Result> spGET_DIRECTORIES_BY_DIR_ID_AUTHORITY_LOGIN_ID(Nullable<long> fnDIR_ID, string fsLOGIN_ID)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_DIRECTORIES_BY_DIR_ID_AUTHORITY_LOGIN_ID_Result>("spGET_DIRECTORIES_BY_DIR_ID_AUTHORITY_LOGIN_ID", fnDIR_IDParameter, fsLOGIN_IDParameter);
        }
    
        public virtual ObjectResult<spGET_DIRECTORIES_BY_FILE_ID_LOGIN_ID_AUTHORITY_Result> spGET_DIRECTORIES_BY_FILE_ID_LOGIN_ID_AUTHORITY(string fsLOGIN_ID, string fsFILE_NO)
        {
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_DIRECTORIES_BY_FILE_ID_LOGIN_ID_AUTHORITY_Result>("spGET_DIRECTORIES_BY_FILE_ID_LOGIN_ID_AUTHORITY", fsLOGIN_IDParameter, fsFILE_NOParameter);
        }
    
        public virtual ObjectResult<spGET_MATERIAL_BY_MARKED_BY_Result> spGET_MATERIAL_BY_MARKED_BY(string fsMARKED_BY)
        {
            var fsMARKED_BYParameter = fsMARKED_BY != null ?
                new ObjectParameter("fsMARKED_BY", fsMARKED_BY) :
                new ObjectParameter("fsMARKED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_MATERIAL_BY_MARKED_BY_Result>("spGET_MATERIAL_BY_MARKED_BY", fsMARKED_BYParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_BOOKING(Nullable<int> fnBOOKING_T_ID, string fsREASON, string fsDESCRIPTION, string fsPROFILE_V, string fsPROFILE_A, string fsWATERMARK, string fsPATH, Nullable<System.DateTime> fdSTART_WORK_TIME, string fsCREATED_BY, string fnMATERIAL_IDs)
        {
            var fnBOOKING_T_IDParameter = fnBOOKING_T_ID.HasValue ?
                new ObjectParameter("fnBOOKING_T_ID", fnBOOKING_T_ID) :
                new ObjectParameter("fnBOOKING_T_ID", typeof(int));
    
            var fsREASONParameter = fsREASON != null ?
                new ObjectParameter("fsREASON", fsREASON) :
                new ObjectParameter("fsREASON", typeof(string));
    
            var fsDESCRIPTIONParameter = fsDESCRIPTION != null ?
                new ObjectParameter("fsDESCRIPTION", fsDESCRIPTION) :
                new ObjectParameter("fsDESCRIPTION", typeof(string));
    
            var fsPROFILE_VParameter = fsPROFILE_V != null ?
                new ObjectParameter("fsPROFILE_V", fsPROFILE_V) :
                new ObjectParameter("fsPROFILE_V", typeof(string));
    
            var fsPROFILE_AParameter = fsPROFILE_A != null ?
                new ObjectParameter("fsPROFILE_A", fsPROFILE_A) :
                new ObjectParameter("fsPROFILE_A", typeof(string));
    
            var fsWATERMARKParameter = fsWATERMARK != null ?
                new ObjectParameter("fsWATERMARK", fsWATERMARK) :
                new ObjectParameter("fsWATERMARK", typeof(string));
    
            var fsPATHParameter = fsPATH != null ?
                new ObjectParameter("fsPATH", fsPATH) :
                new ObjectParameter("fsPATH", typeof(string));
    
            var fdSTART_WORK_TIMEParameter = fdSTART_WORK_TIME.HasValue ?
                new ObjectParameter("fdSTART_WORK_TIME", fdSTART_WORK_TIME) :
                new ObjectParameter("fdSTART_WORK_TIME", typeof(System.DateTime));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            var fnMATERIAL_IDsParameter = fnMATERIAL_IDs != null ?
                new ObjectParameter("fnMATERIAL_IDs", fnMATERIAL_IDs) :
                new ObjectParameter("fnMATERIAL_IDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_BOOKING", fnBOOKING_T_IDParameter, fsREASONParameter, fsDESCRIPTIONParameter, fsPROFILE_VParameter, fsPROFILE_AParameter, fsWATERMARKParameter, fsPATHParameter, fdSTART_WORK_TIMEParameter, fsCREATED_BYParameter, fnMATERIAL_IDsParameter);
        }
    
        public virtual ObjectResult<spGET_L_WORK_BY_BOOKING_Result> spGET_L_WORK_BY_BOOKING(Nullable<long> fnWORK_ID, string fsLOGIN_ID, string fdBEG_TIME, string fdEND_TIME, string fsSTATUS)
        {
            var fnWORK_IDParameter = fnWORK_ID.HasValue ?
                new ObjectParameter("fnWORK_ID", fnWORK_ID) :
                new ObjectParameter("fnWORK_ID", typeof(long));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fdBEG_TIMEParameter = fdBEG_TIME != null ?
                new ObjectParameter("fdBEG_TIME", fdBEG_TIME) :
                new ObjectParameter("fdBEG_TIME", typeof(string));
    
            var fdEND_TIMEParameter = fdEND_TIME != null ?
                new ObjectParameter("fdEND_TIME", fdEND_TIME) :
                new ObjectParameter("fdEND_TIME", typeof(string));
    
            var fsSTATUSParameter = fsSTATUS != null ?
                new ObjectParameter("fsSTATUS", fsSTATUS) :
                new ObjectParameter("fsSTATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_L_WORK_BY_BOOKING_Result>("spGET_L_WORK_BY_BOOKING", fnWORK_IDParameter, fsLOGIN_IDParameter, fdBEG_TIMEParameter, fdEND_TIMEParameter, fsSTATUSParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_REBOOKING(Nullable<long> fnWORK_ID, string fsUPDATED_BY)
        {
            var fnWORK_IDParameter = fnWORK_ID.HasValue ?
                new ObjectParameter("fnWORK_ID", fnWORK_ID) :
                new ObjectParameter("fnWORK_ID", typeof(long));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_REBOOKING", fnWORK_IDParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_USER_DIR_AUTH(string fsLOGIN_ID)
        {
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_USER_DIR_AUTH", fsLOGIN_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ANNOUNCE_BY_LOGIN_ID_Result> spGET_ANNOUNCE_BY_LOGIN_ID(string fsLOGIN_ID)
        {
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ANNOUNCE_BY_LOGIN_ID_Result>("spGET_ANNOUNCE_BY_LOGIN_ID", fsLOGIN_IDParameter);
        }
    
        public virtual ObjectResult<spRPT_GET_ARC_LIST_DETAIL_Result> spRPT_GET_ARC_LIST_DETAIL(string fdSDATE, string fdEDATE)
        {
            var fdSDATEParameter = fdSDATE != null ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(string));
    
            var fdEDATEParameter = fdEDATE != null ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRPT_GET_ARC_LIST_DETAIL_Result>("spRPT_GET_ARC_LIST_DETAIL", fdSDATEParameter, fdEDATEParameter);
        }
    
        public virtual ObjectResult<spRPT_GET_ARC_LIST_SUM_Result> spRPT_GET_ARC_LIST_SUM(string fdSDATE, string fdEDATE)
        {
            var fdSDATEParameter = fdSDATE != null ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(string));
    
            var fdEDATEParameter = fdEDATE != null ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRPT_GET_ARC_LIST_SUM_Result>("spRPT_GET_ARC_LIST_SUM", fdSDATEParameter, fdEDATEParameter);
        }
    
        public virtual ObjectResult<spRPT_GET_BOOKING_LIST_DETAIL_Result> spRPT_GET_BOOKING_LIST_DETAIL(string fdSDATE, string fdEDATE)
        {
            var fdSDATEParameter = fdSDATE != null ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(string));
    
            var fdEDATEParameter = fdEDATE != null ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRPT_GET_BOOKING_LIST_DETAIL_Result>("spRPT_GET_BOOKING_LIST_DETAIL", fdSDATEParameter, fdEDATEParameter);
        }
    
        public virtual ObjectResult<spRPT_GET_BOOKING_LIST_SUM_Result> spRPT_GET_BOOKING_LIST_SUM(string fdSDATE, string fdEDATE)
        {
            var fdSDATEParameter = fdSDATE != null ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(string));
    
            var fdEDATEParameter = fdEDATE != null ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRPT_GET_BOOKING_LIST_SUM_Result>("spRPT_GET_BOOKING_LIST_SUM", fdSDATEParameter, fdEDATEParameter);
        }
    
        public virtual ObjectResult<spGET_DIRECTORIES_BY_SUBJ_ID_LOGIN_ID_AUTHORITY_Result> spGET_DIRECTORIES_BY_SUBJ_ID_LOGIN_ID_AUTHORITY(string fsLOGIN_ID, string fsSUBJ_ID)
        {
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_DIRECTORIES_BY_SUBJ_ID_LOGIN_ID_AUTHORITY_Result>("spGET_DIRECTORIES_BY_SUBJ_ID_LOGIN_ID_AUTHORITY", fsLOGIN_IDParameter, fsSUBJ_IDParameter);
        }
    
        public virtual ObjectResult<spGET_DIRECTORIES_TEMPLATE_BY_DIR_ID_Result> spGET_DIRECTORIES_TEMPLATE_BY_DIR_ID(Nullable<long> fnDIR_ID)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_DIRECTORIES_TEMPLATE_BY_DIR_ID_Result>("spGET_DIRECTORIES_TEMPLATE_BY_DIR_ID", fnDIR_IDParameter);
        }
    
        public virtual ObjectResult<spGET_L_WORK_MERGE_Result> spGET_L_WORK_MERGE(string fnWORK_ID)
        {
            var fnWORK_IDParameter = fnWORK_ID != null ?
                new ObjectParameter("fnWORK_ID", fnWORK_ID) :
                new ObjectParameter("fnWORK_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_L_WORK_MERGE_Result>("spGET_L_WORK_MERGE", fnWORK_IDParameter);
        }
    
        public virtual ObjectResult<sp_t_GET_ARC_AUDIO_Result> sp_t_GET_ARC_AUDIO(Nullable<long> fnINDEX_ID)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_t_GET_ARC_AUDIO_Result>("sp_t_GET_ARC_AUDIO", fnINDEX_IDParameter);
        }
    
        public virtual ObjectResult<sp_t_GET_ARC_AUDIO_D_Result> sp_t_GET_ARC_AUDIO_D(Nullable<long> fnINDEX_ID)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_t_GET_ARC_AUDIO_D_Result>("sp_t_GET_ARC_AUDIO_D", fnINDEX_IDParameter);
        }
    
        public virtual ObjectResult<sp_t_GET_ARC_DOC_Result> sp_t_GET_ARC_DOC(Nullable<long> fnINDEX_ID)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_t_GET_ARC_DOC_Result>("sp_t_GET_ARC_DOC", fnINDEX_IDParameter);
        }
    
        public virtual ObjectResult<sp_t_GET_ARC_PHOTO_Result> sp_t_GET_ARC_PHOTO(Nullable<long> fnINDEX_ID)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_t_GET_ARC_PHOTO_Result>("sp_t_GET_ARC_PHOTO", fnINDEX_IDParameter);
        }
    
        public virtual ObjectResult<sp_t_GET_ARC_VIDEO_Result> sp_t_GET_ARC_VIDEO(Nullable<long> fnINDEX_ID)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_t_GET_ARC_VIDEO_Result>("sp_t_GET_ARC_VIDEO", fnINDEX_IDParameter);
        }
    
        public virtual ObjectResult<sp_t_GET_ARC_VIDEO_D_Result> sp_t_GET_ARC_VIDEO_D(Nullable<long> fnINDEX_ID)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_t_GET_ARC_VIDEO_D_Result>("sp_t_GET_ARC_VIDEO_D", fnINDEX_IDParameter);
        }
    
        public virtual ObjectResult<sp_t_GET_ARC_VIDEO_K_Result> sp_t_GET_ARC_VIDEO_K(Nullable<long> fnINDEX_ID)
        {
            var fnINDEX_IDParameter = fnINDEX_ID.HasValue ?
                new ObjectParameter("fnINDEX_ID", fnINDEX_ID) :
                new ObjectParameter("fnINDEX_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_t_GET_ARC_VIDEO_K_Result>("sp_t_GET_ARC_VIDEO_K", fnINDEX_IDParameter);
        }
    
        public virtual ObjectResult<sp_t_GET_ARC_AUDIO_ATTRIBUTE_Result> sp_t_GET_ARC_AUDIO_ATTRIBUTE(string fsFILE_NO)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_t_GET_ARC_AUDIO_ATTRIBUTE_Result>("sp_t_GET_ARC_AUDIO_ATTRIBUTE", fsFILE_NOParameter);
        }
    
        public virtual ObjectResult<sp_t_GET_ARC_DOC_ATTRIBUTE_Result> sp_t_GET_ARC_DOC_ATTRIBUTE(string fsFILE_NO)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_t_GET_ARC_DOC_ATTRIBUTE_Result>("sp_t_GET_ARC_DOC_ATTRIBUTE", fsFILE_NOParameter);
        }
    
        public virtual ObjectResult<sp_t_GET_ARC_PHOTO_ATTRIBUTE_Result> sp_t_GET_ARC_PHOTO_ATTRIBUTE(string fsFILE_NO)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_t_GET_ARC_PHOTO_ATTRIBUTE_Result>("sp_t_GET_ARC_PHOTO_ATTRIBUTE", fsFILE_NOParameter);
        }
    
        public virtual ObjectResult<sp_t_GET_ARC_VIDEO_ATTRIBUTE_Result> sp_t_GET_ARC_VIDEO_ATTRIBUTE(string fsFILE_NO)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_t_GET_ARC_VIDEO_ATTRIBUTE_Result>("sp_t_GET_ARC_VIDEO_ATTRIBUTE", fsFILE_NOParameter);
        }
    
        public virtual ObjectResult<spGET_SUBJECT_ATTRIBUTE_Result> spGET_SUBJECT_ATTRIBUTE(string fsSUBJ_ID)
        {
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_SUBJECT_ATTRIBUTE_Result>("spGET_SUBJECT_ATTRIBUTE", fsSUBJ_IDParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_LIST_SUM_Result> spGET_ARC_LIST_SUM(string fdSDATE, string fdEDATE)
        {
            var fdSDATEParameter = fdSDATE != null ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(string));
    
            var fdEDATEParameter = fdEDATE != null ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_LIST_SUM_Result>("spGET_ARC_LIST_SUM", fdSDATEParameter, fdEDATEParameter);
        }
    
        public virtual ObjectResult<spGET_BOOKING_LIST_SUM_Result> spGET_BOOKING_LIST_SUM(string fdSDATE, string fdEDATE)
        {
            var fdSDATEParameter = fdSDATE != null ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(string));
    
            var fdEDATEParameter = fdEDATE != null ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_BOOKING_LIST_SUM_Result>("spGET_BOOKING_LIST_SUM", fdSDATEParameter, fdEDATEParameter);
        }
    
        public virtual ObjectResult<spGET_ARC_LIST_DETAIL_Result> spGET_ARC_LIST_DETAIL(string fdSDATE, string fdEDATE)
        {
            var fdSDATEParameter = fdSDATE != null ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(string));
    
            var fdEDATEParameter = fdEDATE != null ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_ARC_LIST_DETAIL_Result>("spGET_ARC_LIST_DETAIL", fdSDATEParameter, fdEDATEParameter);
        }
    
        public virtual ObjectResult<spGET_BOOKING_LIST_DETAIL_Result> spGET_BOOKING_LIST_DETAIL(string fdSDATE, string fdEDATE)
        {
            var fdSDATEParameter = fdSDATE != null ?
                new ObjectParameter("fdSDATE", fdSDATE) :
                new ObjectParameter("fdSDATE", typeof(string));
    
            var fdEDATEParameter = fdEDATE != null ?
                new ObjectParameter("fdEDATE", fdEDATE) :
                new ObjectParameter("fdEDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_BOOKING_LIST_DETAIL_Result>("spGET_BOOKING_LIST_DETAIL", fdSDATEParameter, fdEDATEParameter);
        }
    
        public virtual ObjectResult<string> spINSERT_BOOKING_APPROVE(Nullable<int> fnBOOKING_T_ID, string fsREASON, string fsDESCRIPTION, string fsPROFILE_V, string fsPROFILE_A, string fsWATERMARK, string fsPATH, string fdSTART_WORK_TIME, string fsCREATED_BY, string fnMATERIAL_IDs)
        {
            var fnBOOKING_T_IDParameter = fnBOOKING_T_ID.HasValue ?
                new ObjectParameter("fnBOOKING_T_ID", fnBOOKING_T_ID) :
                new ObjectParameter("fnBOOKING_T_ID", typeof(int));
    
            var fsREASONParameter = fsREASON != null ?
                new ObjectParameter("fsREASON", fsREASON) :
                new ObjectParameter("fsREASON", typeof(string));
    
            var fsDESCRIPTIONParameter = fsDESCRIPTION != null ?
                new ObjectParameter("fsDESCRIPTION", fsDESCRIPTION) :
                new ObjectParameter("fsDESCRIPTION", typeof(string));
    
            var fsPROFILE_VParameter = fsPROFILE_V != null ?
                new ObjectParameter("fsPROFILE_V", fsPROFILE_V) :
                new ObjectParameter("fsPROFILE_V", typeof(string));
    
            var fsPROFILE_AParameter = fsPROFILE_A != null ?
                new ObjectParameter("fsPROFILE_A", fsPROFILE_A) :
                new ObjectParameter("fsPROFILE_A", typeof(string));
    
            var fsWATERMARKParameter = fsWATERMARK != null ?
                new ObjectParameter("fsWATERMARK", fsWATERMARK) :
                new ObjectParameter("fsWATERMARK", typeof(string));
    
            var fsPATHParameter = fsPATH != null ?
                new ObjectParameter("fsPATH", fsPATH) :
                new ObjectParameter("fsPATH", typeof(string));
    
            var fdSTART_WORK_TIMEParameter = fdSTART_WORK_TIME != null ?
                new ObjectParameter("fdSTART_WORK_TIME", fdSTART_WORK_TIME) :
                new ObjectParameter("fdSTART_WORK_TIME", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            var fnMATERIAL_IDsParameter = fnMATERIAL_IDs != null ?
                new ObjectParameter("fnMATERIAL_IDs", fnMATERIAL_IDs) :
                new ObjectParameter("fnMATERIAL_IDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_BOOKING_APPROVE", fnBOOKING_T_IDParameter, fsREASONParameter, fsDESCRIPTIONParameter, fsPROFILE_VParameter, fsPROFILE_AParameter, fsWATERMARKParameter, fsPATHParameter, fdSTART_WORK_TIMEParameter, fsCREATED_BYParameter, fnMATERIAL_IDsParameter);
        }
    
        public virtual ObjectResult<spGET_L_WORK_BY_BOOKING_APPROVE_Result> spGET_L_WORK_BY_BOOKING_APPROVE(string fdBEG_TIME, string fdEND_TIME, string fsSTATUS, string fsCREATED_BY, string fsWORK_IDs)
        {
            var fdBEG_TIMEParameter = fdBEG_TIME != null ?
                new ObjectParameter("fdBEG_TIME", fdBEG_TIME) :
                new ObjectParameter("fdBEG_TIME", typeof(string));
    
            var fdEND_TIMEParameter = fdEND_TIME != null ?
                new ObjectParameter("fdEND_TIME", fdEND_TIME) :
                new ObjectParameter("fdEND_TIME", typeof(string));
    
            var fsSTATUSParameter = fsSTATUS != null ?
                new ObjectParameter("fsSTATUS", fsSTATUS) :
                new ObjectParameter("fsSTATUS", typeof(string));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            var fsWORK_IDsParameter = fsWORK_IDs != null ?
                new ObjectParameter("fsWORK_IDs", fsWORK_IDs) :
                new ObjectParameter("fsWORK_IDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_L_WORK_BY_BOOKING_APPROVE_Result>("spGET_L_WORK_BY_BOOKING_APPROVE", fdBEG_TIMEParameter, fdEND_TIMEParameter, fsSTATUSParameter, fsCREATED_BYParameter, fsWORK_IDsParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_L_WORK_BY_BOOKING_APPROVE(string fnWORK_IDs, string aPPROVE_STATUS, string aPPROVE_BY, string aPPROVE_MEMO)
        {
            var fnWORK_IDsParameter = fnWORK_IDs != null ?
                new ObjectParameter("fnWORK_IDs", fnWORK_IDs) :
                new ObjectParameter("fnWORK_IDs", typeof(string));
    
            var aPPROVE_STATUSParameter = aPPROVE_STATUS != null ?
                new ObjectParameter("APPROVE_STATUS", aPPROVE_STATUS) :
                new ObjectParameter("APPROVE_STATUS", typeof(string));
    
            var aPPROVE_BYParameter = aPPROVE_BY != null ?
                new ObjectParameter("APPROVE_BY", aPPROVE_BY) :
                new ObjectParameter("APPROVE_BY", typeof(string));
    
            var aPPROVE_MEMOParameter = aPPROVE_MEMO != null ?
                new ObjectParameter("APPROVE_MEMO", aPPROVE_MEMO) :
                new ObjectParameter("APPROVE_MEMO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_L_WORK_BY_BOOKING_APPROVE", fnWORK_IDsParameter, aPPROVE_STATUSParameter, aPPROVE_BYParameter, aPPROVE_MEMOParameter);
        }
    
        public virtual ObjectResult<spGET_RULE_BY_RULE_TABLE_COLUMN_Result> spGET_RULE_BY_RULE_TABLE_COLUMN(string fsRULECATEGORY, string fsTARGETTABLE, string fsCOLUMN)
        {
            var fsRULECATEGORYParameter = fsRULECATEGORY != null ?
                new ObjectParameter("fsRULECATEGORY", fsRULECATEGORY) :
                new ObjectParameter("fsRULECATEGORY", typeof(string));
    
            var fsTARGETTABLEParameter = fsTARGETTABLE != null ?
                new ObjectParameter("fsTARGETTABLE", fsTARGETTABLE) :
                new ObjectParameter("fsTARGETTABLE", typeof(string));
    
            var fsCOLUMNParameter = fsCOLUMN != null ?
                new ObjectParameter("fsCOLUMN", fsCOLUMN) :
                new ObjectParameter("fsCOLUMN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_RULE_BY_RULE_TABLE_COLUMN_Result>("spGET_RULE_BY_RULE_TABLE_COLUMN", fsRULECATEGORYParameter, fsTARGETTABLEParameter, fsCOLUMNParameter);
        }
    
        public virtual ObjectResult<spGET_DIRECTORIES_BY_FILE_NO_LOAD_ON_DEMAND_Result> spGET_DIRECTORIES_BY_FILE_NO_LOAD_ON_DEMAND(string fsTYPE, string fsFILE_NO, Nullable<long> fnDIR_ID, string fsLOGIN_ID, string fsKEYWORD)
        {
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fsKEYWORDParameter = fsKEYWORD != null ?
                new ObjectParameter("fsKEYWORD", fsKEYWORD) :
                new ObjectParameter("fsKEYWORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_DIRECTORIES_BY_FILE_NO_LOAD_ON_DEMAND_Result>("spGET_DIRECTORIES_BY_FILE_NO_LOAD_ON_DEMAND", fsTYPEParameter, fsFILE_NOParameter, fnDIR_IDParameter, fsLOGIN_IDParameter, fsKEYWORDParameter);
        }
    
        public virtual ObjectResult<spGET_DIRECTORIES_BY_SUBJ_ID_LOAD_ON_DEMAND_Result> spGET_DIRECTORIES_BY_SUBJ_ID_LOAD_ON_DEMAND(string fsSUBJ_ID, Nullable<long> fnDIR_ID, string fsLOGIN_ID, string fsKEYWORD)
        {
            var fsSUBJ_IDParameter = fsSUBJ_ID != null ?
                new ObjectParameter("fsSUBJ_ID", fsSUBJ_ID) :
                new ObjectParameter("fsSUBJ_ID", typeof(string));
    
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fsKEYWORDParameter = fsKEYWORD != null ?
                new ObjectParameter("fsKEYWORD", fsKEYWORD) :
                new ObjectParameter("fsKEYWORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_DIRECTORIES_BY_SUBJ_ID_LOAD_ON_DEMAND_Result>("spGET_DIRECTORIES_BY_SUBJ_ID_LOAD_ON_DEMAND", fsSUBJ_IDParameter, fnDIR_IDParameter, fsLOGIN_IDParameter, fsKEYWORDParameter);
        }
    
        public virtual ObjectResult<spGET_DIRECTORIES_LOAD_ON_DEMAND_ALL_Result> spGET_DIRECTORIES_LOAD_ON_DEMAND_ALL(Nullable<long> fnDIR_ID, string fsLOGIN_ID, string fsKEYWORD, string fcSHOW_SUBJ)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsLOGIN_IDParameter = fsLOGIN_ID != null ?
                new ObjectParameter("fsLOGIN_ID", fsLOGIN_ID) :
                new ObjectParameter("fsLOGIN_ID", typeof(string));
    
            var fsKEYWORDParameter = fsKEYWORD != null ?
                new ObjectParameter("fsKEYWORD", fsKEYWORD) :
                new ObjectParameter("fsKEYWORD", typeof(string));
    
            var fcSHOW_SUBJParameter = fcSHOW_SUBJ != null ?
                new ObjectParameter("fcSHOW_SUBJ", fcSHOW_SUBJ) :
                new ObjectParameter("fcSHOW_SUBJ", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_DIRECTORIES_LOAD_ON_DEMAND_ALL_Result>("spGET_DIRECTORIES_LOAD_ON_DEMAND_ALL", fnDIR_IDParameter, fsLOGIN_IDParameter, fsKEYWORDParameter, fcSHOW_SUBJParameter);
        }
    
        public virtual ObjectResult<spTSM_GET_L_WAIT_VOL_ACTIVE_ALL_Result> spTSM_GET_L_WAIT_VOL_ACTIVE_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTSM_GET_L_WAIT_VOL_ACTIVE_ALL_Result>("spTSM_GET_L_WAIT_VOL_ACTIVE_ALL");
        }
    
        public virtual ObjectResult<string> spINSERT_BOOKING_BATCH(Nullable<int> fnBOOKING_T_ID, string fsREASON, string fsDESCRIPTION, string fsPROFILE_V, string fsPROFILE_A, string fsWATERMARK, string fsPATH, Nullable<System.DateTime> fdSTART_WORK_TIME, string fsCREATED_BY, string fsFILE_NOs)
        {
            var fnBOOKING_T_IDParameter = fnBOOKING_T_ID.HasValue ?
                new ObjectParameter("fnBOOKING_T_ID", fnBOOKING_T_ID) :
                new ObjectParameter("fnBOOKING_T_ID", typeof(int));
    
            var fsREASONParameter = fsREASON != null ?
                new ObjectParameter("fsREASON", fsREASON) :
                new ObjectParameter("fsREASON", typeof(string));
    
            var fsDESCRIPTIONParameter = fsDESCRIPTION != null ?
                new ObjectParameter("fsDESCRIPTION", fsDESCRIPTION) :
                new ObjectParameter("fsDESCRIPTION", typeof(string));
    
            var fsPROFILE_VParameter = fsPROFILE_V != null ?
                new ObjectParameter("fsPROFILE_V", fsPROFILE_V) :
                new ObjectParameter("fsPROFILE_V", typeof(string));
    
            var fsPROFILE_AParameter = fsPROFILE_A != null ?
                new ObjectParameter("fsPROFILE_A", fsPROFILE_A) :
                new ObjectParameter("fsPROFILE_A", typeof(string));
    
            var fsWATERMARKParameter = fsWATERMARK != null ?
                new ObjectParameter("fsWATERMARK", fsWATERMARK) :
                new ObjectParameter("fsWATERMARK", typeof(string));
    
            var fsPATHParameter = fsPATH != null ?
                new ObjectParameter("fsPATH", fsPATH) :
                new ObjectParameter("fsPATH", typeof(string));
    
            var fdSTART_WORK_TIMEParameter = fdSTART_WORK_TIME.HasValue ?
                new ObjectParameter("fdSTART_WORK_TIME", fdSTART_WORK_TIME) :
                new ObjectParameter("fdSTART_WORK_TIME", typeof(System.DateTime));
    
            var fsCREATED_BYParameter = fsCREATED_BY != null ?
                new ObjectParameter("fsCREATED_BY", fsCREATED_BY) :
                new ObjectParameter("fsCREATED_BY", typeof(string));
    
            var fsFILE_NOsParameter = fsFILE_NOs != null ?
                new ObjectParameter("fsFILE_NOs", fsFILE_NOs) :
                new ObjectParameter("fsFILE_NOs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spINSERT_BOOKING_BATCH", fnBOOKING_T_IDParameter, fsREASONParameter, fsDESCRIPTIONParameter, fsPROFILE_VParameter, fsPROFILE_AParameter, fsWATERMARKParameter, fsPATHParameter, fdSTART_WORK_TIMEParameter, fsCREATED_BYParameter, fsFILE_NOsParameter);
        }
    
        public virtual ObjectResult<spGET_DIRECTORIES_AND_SUBJECTS_BY_DIR_ID_FILTER_Result> spGET_DIRECTORIES_AND_SUBJECTS_BY_DIR_ID_FILTER(Nullable<long> fnDIR_ID, string fsTYPE, string fsFILE_NO)
        {
            var fnDIR_IDParameter = fnDIR_ID.HasValue ?
                new ObjectParameter("fnDIR_ID", fnDIR_ID) :
                new ObjectParameter("fnDIR_ID", typeof(long));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_DIRECTORIES_AND_SUBJECTS_BY_DIR_ID_FILTER_Result>("spGET_DIRECTORIES_AND_SUBJECTS_BY_DIR_ID_FILTER", fnDIR_IDParameter, fsTYPEParameter, fsFILE_NOParameter);
        }
    
        public virtual ObjectResult<spRPT_GET_SEARCH_EXPORT_DATA_Result> spRPT_GET_SEARCH_EXPORT_DATA(Nullable<bool> fbIS_HEAD, Nullable<int> fnTEMP_ID, string fsFILE_NO, string fsTYPE)
        {
            var fbIS_HEADParameter = fbIS_HEAD.HasValue ?
                new ObjectParameter("fbIS_HEAD", fbIS_HEAD) :
                new ObjectParameter("fbIS_HEAD", typeof(bool));
    
            var fnTEMP_IDParameter = fnTEMP_ID.HasValue ?
                new ObjectParameter("fnTEMP_ID", fnTEMP_ID) :
                new ObjectParameter("fnTEMP_ID", typeof(int));
    
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var fsTYPEParameter = fsTYPE != null ?
                new ObjectParameter("fsTYPE", fsTYPE) :
                new ObjectParameter("fsTYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spRPT_GET_SEARCH_EXPORT_DATA_Result>("spRPT_GET_SEARCH_EXPORT_DATA", fbIS_HEADParameter, fnTEMP_IDParameter, fsFILE_NOParameter, fsTYPEParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_BOOKING_CANCEL(Nullable<long> fnWORK_ID, string fsUPDATED_BY)
        {
            var fnWORK_IDParameter = fnWORK_ID.HasValue ?
                new ObjectParameter("fnWORK_ID", fnWORK_ID) :
                new ObjectParameter("fnWORK_ID", typeof(long));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_BOOKING_CANCEL", fnWORK_IDParameter, fsUPDATED_BYParameter);
        }
    
        public virtual ObjectResult<spGET_BOOKING_TODAY_TOP_10_Result> spGET_BOOKING_TODAY_TOP_10()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_BOOKING_TODAY_TOP_10_Result>("spGET_BOOKING_TODAY_TOP_10");
        }
    
        public virtual ObjectResult<spGET_WORK_ARC_CURRENT_QTY_Result> spGET_WORK_ARC_CURRENT_QTY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_WORK_ARC_CURRENT_QTY_Result>("spGET_WORK_ARC_CURRENT_QTY");
        }
    
        public virtual ObjectResult<spGET_WORK_BOOK_CURRENT_QTY_Result> spGET_WORK_BOOK_CURRENT_QTY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_WORK_BOOK_CURRENT_QTY_Result>("spGET_WORK_BOOK_CURRENT_QTY");
        }
    
        public virtual ObjectResult<spGET_INEWS_Result> spGET_INEWS(string lstCOLUMNs, string lstVALUEs)
        {
            var lstCOLUMNsParameter = lstCOLUMNs != null ?
                new ObjectParameter("lstCOLUMNs", lstCOLUMNs) :
                new ObjectParameter("lstCOLUMNs", typeof(string));
    
            var lstVALUEsParameter = lstVALUEs != null ?
                new ObjectParameter("lstVALUEs", lstVALUEs) :
                new ObjectParameter("lstVALUEs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGET_INEWS_Result>("spGET_INEWS", lstCOLUMNsParameter, lstVALUEsParameter);
        }
    
        public virtual ObjectResult<string> spUPDATE_INEWS(string fsFILE_NO, string lstCOLUMNs, string lstVALUEs, string fsUPDATED_BY)
        {
            var fsFILE_NOParameter = fsFILE_NO != null ?
                new ObjectParameter("fsFILE_NO", fsFILE_NO) :
                new ObjectParameter("fsFILE_NO", typeof(string));
    
            var lstCOLUMNsParameter = lstCOLUMNs != null ?
                new ObjectParameter("lstCOLUMNs", lstCOLUMNs) :
                new ObjectParameter("lstCOLUMNs", typeof(string));
    
            var lstVALUEsParameter = lstVALUEs != null ?
                new ObjectParameter("lstVALUEs", lstVALUEs) :
                new ObjectParameter("lstVALUEs", typeof(string));
    
            var fsUPDATED_BYParameter = fsUPDATED_BY != null ?
                new ObjectParameter("fsUPDATED_BY", fsUPDATED_BY) :
                new ObjectParameter("fsUPDATED_BY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUPDATE_INEWS", fsFILE_NOParameter, lstCOLUMNsParameter, lstVALUEsParameter, fsUPDATED_BYParameter);
        }
    }
}
