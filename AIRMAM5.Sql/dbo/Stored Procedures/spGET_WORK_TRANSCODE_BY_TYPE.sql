





-- =============================================
-- 描述:	傳入V/A/P/D回傳註冊工作項中,優先順序高的未處理工作
-- 記錄:	<2019/07/03><David.Sin><重構本預存>
-- 記錄:	<2019/08/08><David.Sin><新增判斷Keyframe是否要走動態規則>
-- =============================================
CREATE PROCEDURE [dbo].[spGET_WORK_TRANSCODE_BY_TYPE]
	@TYPE VARCHAR(1)
AS
BEGIN
 	SET NOCOUNT ON;

	BEGIN TRY
		
		DECLARE @fnWORK_ID BIGINT = ISNULL((
										SELECT	TOP 1 fnWORK_ID
										FROM	tblWORK
										WHERE
											(fdSTART_WORK_TIME <= GETDATE()) AND	
											(fsSTATUS LIKE '0%') AND 
											(fsPARAMETERS LIKE @TYPE + '%')	AND --9開頭表示完成 >9的也已結束 <9表示未完成
									        (fsTYPE IN ('TRANSCODE','DAILY_ITP'))
									ORDER BY CONVERT(INT,fsPRIORITY), fnWORK_ID ),-1)

		/*若取不到媒體檔資訊,可能是被移除了,排程取消*/
		IF(((SELECT COUNT(*) FROM tbmARC_VIDEO WHERE (@TYPE = 'V' AND fsFILE_NO = (SELECT _ITEM_ID FROM tblWORK WHERE fnWORK_ID = @fnWORK_ID)))+
			(SELECT COUNT(*) FROM tbmARC_AUDIO WHERE (@TYPE = 'A' AND fsFILE_NO = (SELECT _ITEM_ID FROM tblWORK WHERE fnWORK_ID = @fnWORK_ID)))+
			(SELECT COUNT(*) FROM tbmARC_PHOTO WHERE (@TYPE = 'P' AND fsFILE_NO = (SELECT _ITEM_ID FROM tblWORK WHERE fnWORK_ID = @fnWORK_ID)))+
			(SELECT COUNT(*) FROM tbmARC_DOC WHERE (@TYPE = 'D' AND fsFILE_NO = (SELECT _ITEM_ID FROM tblWORK WHERE fnWORK_ID = @fnWORK_ID))) = 0))
		BEGIN
			UPDATE tblWORK
			SET fsSTATUS = 'C0'
			WHERE (fnWORK_ID = @fnWORK_ID)
		END
		
		DECLARE @PAREMETERS VARCHAR(300) = ''
		DECLARE @STATUS_0 VARCHAR(2) = ''
		DECLARE @FILE_TYPE VARCHAR(50) = ''
		SELECT 
			@PAREMETERS = fsPARAMETERS, 
			@STATUS_0 = fsSTATUS, 
			@FILE_TYPE = fsTYPE
		FROM 
			tblWORK 
		WHERE 
			fnWORK_ID = @fnWORK_ID
		
		/*取到WORK開始處理，將狀態修改為01*/
		UPDATE	tblWORK
		SET		fsSTATUS = '01'
		WHERE	(fnWORK_ID = @fnWORK_ID)
		
		/*組合需要的資訊*/
		SELECT
			A.fnWORK_ID AS WORK_ID,
			B.fsFILE_NO AS FILE_NO,
			CASE @FILE_TYPE
				WHEN 'DAILY_ITP' THEN B.fsFILE_PATH + B.fsFILE_NO + '_H.' + B.fsFILE_TYPE
				WHEN 'TRANSCODE' THEN UPPER(B.fsFILE_PATH) + B.fsFILE_NO + '_H.' + B.fsFILE_TYPE
			END AS FILE_FROM,
			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'MEDIA_FOLDER_V_H') 
					+ SUBSTRING(B.fsFILE_NO,1,4) + '\' + SUBSTRING(B.fsFILE_NO,5,2) + '\' + SUBSTRING(B.fsFILE_NO,7,2) + '\' 
					+ B.fsFILE_NO + '_H.' + B.fsFILE_TYPE_H AS FILE_H_TO,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_VDO_H') AS FILE_H_CONFIG,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'MEDIA_FOLDER_V_L') 
					+ SUBSTRING(B.fsFILE_NO,1,4) + '\' + SUBSTRING(B.fsFILE_NO,5,2) + '\' + SUBSTRING(B.fsFILE_NO,7,2) + '\'
					+ B.fsFILE_NO + '_L.' + dbo.fnGET_ITEM_BY_INDEX((SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_VDO_L'),0) AS FILE_L_TO,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_VDO_L') AS FILE_L_CONFIG,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'MEDIA_FOLDER_V_K') 
					+ SUBSTRING(B.fsFILE_NO,1,4) + '\' + SUBSTRING(B.fsFILE_NO,5,2) + '\' + SUBSTRING(B.fsFILE_NO,7,2) + '\'
					+ B.fsFILE_NO + '\' AS KF_PATH,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'MEDIA_FOLDER_V_L') 
					+ SUBSTRING(B.fsFILE_NO,1,4) + '\' + SUBSTRING(B.fsFILE_NO,5,2) + '\' + SUBSTRING(B.fsFILE_NO,7,2) + '\' 
					+ 'thumbnail' + '\' + B.fsFILE_NO + '_thumb.jpg' AS THUMB_PATH,
			--若設定值為0則使用預設規則
			CASE
				WHEN (SELECT CONVERT(INT,fsVALUE) FROM tbzCONFIG WHERE fsKEY = 'KEYFRAME_RULE_SETTING') = 0 THEN 
					(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'KEYFRAME_RULE') 
				ELSE
					--影片長度大於設定值就用場景偵測
					CASE
						WHEN (SELECT CONVERT(DECIMAL(13,3),fsVALUE) FROM tbzCONFIG WHERE fsKEY = 'KEYFRAME_RULE_SETTING') < (SELECT fdDURATION FROM tbmARC_VIDEO WHERE fsFILE_NO = A._ITEM_ID) THEN
							(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'KEYFRAME_RULE1')
						ELSE 
							(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'KEYFRAME_RULE')
					END
			END AS FILE_KF_CONFIG,
			@STATUS_0 AS STATUS_0,
			(SELECT dbo.fnGET_ITEM_BY_INDEX(@PAREMETERS, 3)) AS TRANS_TO,
			'M' AS MTS_TOOL
		FROM
			tblWORK A
				JOIN tbmARC_VIDEO B ON A._ITEM_ID = B.fsFILE_NO
		WHERE
			SUBSTRING(@PAREMETERS,1,1) = 'V' AND
			A.fnWORK_ID = @fnWORK_ID
		UNION
		SELECT
			A.fnWORK_ID AS WORK_ID,
			B.fsFILE_NO AS FILE_NO,
			CASE @FILE_TYPE
				WHEN 'DAILY_ITP' THEN B.fsFILE_PATH + B.fsFILE_NO + '_H.' + B.fsFILE_TYPE
				WHEN 'TRANSCODE' THEN UPPER(B.fsFILE_PATH) + B.fsFILE_NO + '_H.' + B.fsFILE_TYPE
			END AS FILE_FROM,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'MEDIA_FOLDER_A') 
					+ SUBSTRING(B.fsFILE_NO,1,4) + '\' + SUBSTRING(B.fsFILE_NO,5,2) + '\' + SUBSTRING(B.fsFILE_NO,7,2) + '\' 
					+ B.fsFILE_NO + '_H.' + B.fsFILE_TYPE_H AS FILE_H_TO,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_ADO_H') AS FILE_H_CONFIG,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'MEDIA_FOLDER_A') 
					+ SUBSTRING(B.fsFILE_NO,1,4) + '\' + SUBSTRING(B.fsFILE_NO,5,2) + '\' + SUBSTRING(B.fsFILE_NO,7,2) + '\' 
					+ B.fsFILE_NO + '_L.' + dbo.fnGET_ITEM_BY_INDEX((SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_ADO_L'),0) AS FILE_L_TO,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_ADO_L') AS FILE_L_CONFIG,

			'' AS KF_PATH,
			'' AS THUMB_PATH,
			'' AS FILE_KF_CONFIG,
			@STATUS_0 AS STATUS_0,
			(SELECT dbo.fnGET_ITEM_BY_INDEX(@PAREMETERS, 3)) AS TRANS_TO,
			'M' AS MTS_TOOL
		FROM
			tblWORK A
				JOIN tbmARC_AUDIO B ON A._ITEM_ID = B.fsFILE_NO
		WHERE
			SUBSTRING(@PAREMETERS,1,1) = 'A' AND
			A.fnWORK_ID = @fnWORK_ID
		UNION
		SELECT
			A.fnWORK_ID AS WORK_ID,
			B.fsFILE_NO AS FILE_NO,
			CASE @FILE_TYPE
				WHEN 'DAILY_ITP' THEN B.fsFILE_PATH + B.fsFILE_NO + '_H.' + B.fsFILE_TYPE
				WHEN 'TRANSCODE' THEN UPPER(B.fsFILE_PATH) + B.fsFILE_NO + '_H.' + B.fsFILE_TYPE
			END AS FILE_FROM,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'MEDIA_FOLDER_P') 
					+ SUBSTRING(B.fsFILE_NO,1,4) + '\' + SUBSTRING(B.fsFILE_NO,5,2) + '\' + SUBSTRING(B.fsFILE_NO,7,2) + '\' 
					+ B.fsFILE_NO + '_H.' + B.fsFILE_TYPE_H AS FILE_H_TO,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_PHO_H') AS FILE_H_CONFIG,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'MEDIA_FOLDER_P') 
					+ SUBSTRING(B.fsFILE_NO,1,4) + '\' + SUBSTRING(B.fsFILE_NO,5,2) + '\' + SUBSTRING(B.fsFILE_NO,7,2) + '\'
					 + B.fsFILE_NO + '_L.' + dbo.fnGET_ITEM_BY_INDEX((SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_PHO_L'),0) AS FILE_L_TO,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_PHO_L') AS FILE_L_CONFIG,

			CASE WHEN ((SELECT dbo.fnGET_ITEM_BY_INDEX(@PAREMETERS, 3)) LIKE '%T%') THEN REPLACE(B.fsFILE_PATH_L,'L','K') + B.fsFILE_NO + '\' ELSE '' END AS KF_PATH,
			'' AS THUMB_PATH,
			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_PHO_T') AS FILE_KF_CONFIG,
			@STATUS_0 AS STATUS_0,
			(SELECT dbo.fnGET_ITEM_BY_INDEX(@PAREMETERS, 3)) AS TRANS_TO,
			'M' AS MTS_TOOL
		FROM
			tblWORK A
				JOIN tbmARC_PHOTO B ON A._ITEM_ID = B.fsFILE_NO
		WHERE
			SUBSTRING(@PAREMETERS,1,1) = 'P' AND
			A.fnWORK_ID = @fnWORK_ID
		UNION
		SELECT
			A.fnWORK_ID AS WORK_ID,
			B.fsFILE_NO AS FILE_NO,
			CASE @FILE_TYPE
				WHEN 'DAILY_ITP' THEN B.fsFILE_PATH + B.fsFILE_NO + '.' + B.fsFILE_TYPE
				WHEN 'TRANSCODE' THEN UPPER(B.fsFILE_PATH) + B.fsFILE_NO + '.' + B.fsFILE_TYPE
			END AS FILE_FROM,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'MEDIA_FOLDER_D') 
					+ SUBSTRING(B.fsFILE_NO,1,4) + '\' + SUBSTRING(B.fsFILE_NO,5,2) + '\' + SUBSTRING(B.fsFILE_NO,7,2) + '\' 
					+ B.fsFILE_NO + '.' + B.fsFILE_TYPE AS FILE_H_TO,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_DOC_H') AS FILE_H_CONFIG,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'MEDIA_FOLDER_D') 
					+ SUBSTRING(B.fsFILE_NO,1,4) + '\' + SUBSTRING(B.fsFILE_NO,5,2) + '\' + SUBSTRING(B.fsFILE_NO,7,2) + '\' 
					+ B.fsFILE_NO + '_L.' + dbo.fnGET_ITEM_BY_INDEX((SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_DOC_L'),0) AS FILE_L_TO,

			(SELECT fsVALUE FROM tbzCONFIG WHERE fsKEY = 'TRANSCODE_DOC_L') AS FILE_L_CONFIG,
			'' AS KF_PATH,
			'' AS THUMB_PATH,
			'' AS FILE_KF_CONFIG,
			@STATUS_0 AS STATUS_0,
			REPLACE((SELECT dbo.fnGET_ITEM_BY_INDEX(@PAREMETERS, 3)) ,'H','') AS TRANS_TO,
			'M' AS MTS_TOOL
		FROM
			tblWORK A
				JOIN tbmARC_DOC B ON A._ITEM_ID = B.fsFILE_NO
		WHERE
			SUBSTRING(@PAREMETERS,1,1) = 'D' AND
			A.fnWORK_ID = @fnWORK_ID

	END TRY
	BEGIN CATCH
		SELECT RESULT = 'ERROR:' + CAST(@@ERROR AS VARCHAR(10)) + '-' + ERROR_MESSAGE()
	END CATCH
END



