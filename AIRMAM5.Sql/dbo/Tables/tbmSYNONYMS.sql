CREATE TABLE [dbo].[tbmSYNONYMS] (
    [fnINDEX_ID]     BIGINT          IDENTITY (1, 1) NOT NULL,
    [fsTEXT_LIST]    NVARCHAR (4000) NOT NULL,
    [fsTYPE]         VARCHAR (10)    NOT NULL,
    [fsNOTE]         NVARCHAR (MAX)  NOT NULL,
    [fdCREATED_DATE] DATETIME        NOT NULL,
    [fsCREATED_BY]   VARCHAR (50)    NOT NULL,
    [fdUPDATED_DATE] DATETIME        NULL,
    [fsUPDATED_BY]   VARCHAR (50)    NULL,
    CONSTRAINT [PK_tbmSYNONYMS] PRIMARY KEY CLUSTERED ([fnINDEX_ID] ASC)
);


GO
-- =============================================
-- Author:		<David.Sin>
-- Create date: <2019/05/10>
-- Description:	<同義詞異動紀錄觸發程序>
-- =============================================

CREATE TRIGGER [dbo].[trigSYNONYMS_TRAN]
ON [dbo].[tbmSYNONYMS]
FOR INSERT, UPDATE, DELETE
AS
DECLARE @INSERTCOUNT INT, @DELETECOUNT INT, @T_INSERT_NUM INT, @T_DELETE_NUM INT
DECLARE @YEAR INT
IF @@ROWCOUNT = 0 RETURN
SET @T_DELETE_NUM = (SELECT COUNT(*) FROM DELETED)
SET @T_INSERT_NUM = (SELECT COUNT(*) FROM INSERTED)
IF (@T_DELETE_NUM > 0 AND @T_INSERT_NUM > 0)
BEGIN

	INSERT INTO [log].[tbmSYNONYMS]
	SELECT *,'U',GETDATE(),(SELECT fsUPDATED_BY FROM INSERTED WHERE fnINDEX_ID = DELETED.fnINDEX_ID) 
	FROM DELETED WHERE fsUPDATED_BY IN (SELECT fsLOGIN_ID FROM tbmUSERS)

END
IF (@T_DELETE_NUM > 0 AND @T_INSERT_NUM = 0)
BEGIN

	INSERT INTO [log].[tbmSYNONYMS]
	SELECT *,'D',GETDATE(),CAST(CONTEXT_INFO() AS VARCHAR(50)) FROM DELETED

END
IF (@T_DELETE_NUM = 0 AND @T_INSERT_NUM > 0)
BEGIN

	INSERT INTO [log].[tbmSYNONYMS]
	SELECT *,'I',GETDATE(),fsCREATED_BY FROM INSERTED WHERE fsCREATED_BY IN (SELECT fsLOGIN_ID FROM tbmUSERS)

END
