@model AIRMAM5.DBEntity.Models.Announce.AnnounceDetailViewModel
@{
    Layout = "";
}

@section Styles{
    <link href="~/Content/iftame_style/L_Log/_Details.min.css" rel="stylesheet" />
}

@HtmlHelper.HtmlModal("DetailModal", "公告內容",
@<form class="ui inverted form" name="Detail">
    <div class="three fields">
        <div class="two wide field">
            @Html.LabelFor(model => model.AnnounceId)
            @Html.TextBoxFor(model => model.AnnounceId, new { @readonly = "readonly" })
        </div>
        <div class="ten wide field">
            @Html.LabelFor(model => model.AnnTitle)
            @Html.TextBoxFor(model => model.AnnTitle, new { @readonly = "readonly" })
        </div>
        <div class="four wide field">
            @Html.LabelFor(model => model.AnnSdate)
            @Html.TextBoxFor(model => model.AnnSdate, string.Format("{0:yyyy/MM/dd HH:mm}", Model.AnnSdate), new { @readonly = "readonly" })
        </div>
    </div>
    <div class="three fields">
        <div class="six wide field">
            @Html.LabelFor(model => model.AnnTypeName)
            @Html.TextBoxFor(model => model.AnnTypeName, new { @readonly = "readonly" })
        </div>
        <div class="six wide field">
            @Html.LabelFor(model => model.AnnPublishDept)
            @Html.TextBoxFor(model => model.AnnPublishDept, new { @readonly = "readonly" })
        </div>
        <div class="four wide field">
            @Html.LabelFor(model => model.AnnEdate)
            @Html.TextBoxFor(model => model.AnnEdate, string.Format("{0:yyyy/MM/dd HH:mm}", Model.AnnEdate), new { @readonly = "readonly" })
        </div>
    </div>

    <div class="two fields">
        <div class="two wide field">
            @Html.LabelFor(model => model.IsHidden)
            @*@Html.TextBoxFor(model => model.IsHidden, new { @readonly = "readonly" })*@
            @*@Html.DropDownListFor(model => model.IsHidden, new SelectList(blist, "Value", "Text"), new { @disabled = "disabled" })*@
            @{
                if (Model.IsHidden) { @Html.TextBox("txtIsHidden", "隱藏", new { @disabled = "disabled" }) }
                else { @Html.TextBox("txtIsHidden", "顯示", new { @disabled = "disabled" }) }
             }
        </div>
        <div class="fourteen wide field">
            @Html.LabelFor(model => model.PostTo)
            @Html.TextBoxFor(model => model.PostTo, new { @readonly = "readonly" })
        </div>
    </div>
    <div class="field">
        @Html.LabelFor(model => model.AnnContent)
        @Html.TextAreaFor(model => model.AnnContent, new { @readonly = "readonly", @rows = "6" })
    </div>
    <div class="field">
        @Html.LabelFor(model => model.AnnNote)
        @Html.TextAreaFor(model => model.AnnNote, new { @readonly = "readonly", @rows = "2" })
    </div>
    <div class="four fields">
        <div class="four wide field">
            @Html.LabelFor(model => model.CreatedTime)
            @Html.TextBoxFor(model => model.CreatedTime, string.Format("{0:yyyy/MM/dd HH:mm:ss}", Model.CreatedTime), new { @readonly = "readonly" })
        </div>
        <div class="four wide field">
            @Html.LabelFor(model => model.CreatedBy)
            @Html.TextBoxFor(model => model.CreatedBy, new { @readonly = "readonly" })
        </div>
        <div class="four wide field">
            @Html.LabelFor(model => model.UpdatedTime)
            @Html.TextBoxFor(model => model.UpdatedTime, string.Format("{0:yyyy/MM/dd HH:mm:ss}", Model.UpdatedTime), new { @readonly = "readonly" })
        </div>
        <div class="four wide field">
            @Html.LabelFor(model => model.UpdatedBy)
            @Html.TextBoxFor(model => model.UpdatedBy, new { @readonly = "readonly" })
        </div>
    </div>
</form>
 ,@<button class="ui yellow cancel button" type="button">關閉</button>
  )
